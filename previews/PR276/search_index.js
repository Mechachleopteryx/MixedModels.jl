var documenterSearchIndex = {"docs":
[{"location":"constructors/#Model-constructors-1","page":"Model constructors","title":"Model constructors","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The LinearMixedModel type represents a linear mixed-effects model. Typically it is constructed from a Formula and an appropriate data type, usually a DataFrame.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"LinearMixedModel","category":"page"},{"location":"constructors/#MixedModels.LinearMixedModel","page":"Model constructors","title":"MixedModels.LinearMixedModel","text":"LinearMixedModel\n\nLinear mixed-effects model representation\n\nFields\n\nformula: the formula for the model\nallterms: a vector of random-effects terms, the fixed-effects terms and the response\nsqrtwts: vector of square roots of the case weights.  Can be empty.\nA: an nt × nt symmetric BlockMatrix of matrices representing hcat(Z,X,y)'hcat(Z,X,y)\nL: a nt × nt BlockMatrix - the lower Cholesky factor of Λ'AΛ+I\noptsum: an OptSummary object\n\nProperties\n\nθ or theta: the covariance parameter vector used to form λ\nβ or beta: the fixed-effects coefficient vector\nλ or lambda: a vector of lower triangular matrices repeated on the diagonal blocks of Λ\nσ or sigma: current value of the standard deviation of the per-observation noise\nb: random effects on the original scale, as a vector of matrices\nreterms: a Vector{ReMat{T}} of random-effects terms.\nfeterms: a Vector{FeMat{T}} of the fixed-effects model matrix and the response\nu: random effects on the orthogonal scale, as a vector of matrices\nlowerbd: lower bounds on the elements of θ\nX: the fixed-effects model matrix\ny: the response vector\n\n\n\n\n\n","category":"type"},{"location":"constructors/#Examples-of-linear-mixed-effects-model-fits-1","page":"Model constructors","title":"Examples of linear mixed-effects model fits","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"For illustration, several data sets from the lme4 package for R are made available in .rda format in this package. These include the Dyestuff and Dyestuff2 data sets.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> using DataFrames, MixedModels, StatsBase\n\njulia> dyestuff = MixedModels.dataset(:dyestuff)\n30×2 DataFrames.DataFrame\n│ Row │ batch  │ yield │\n│     │ String │ Int16 │\n├─────┼────────┼───────┤\n│ 1   │ A      │ 1545  │\n│ 2   │ A      │ 1440  │\n│ 3   │ A      │ 1440  │\n│ 4   │ A      │ 1520  │\n│ 5   │ A      │ 1580  │\n│ 6   │ B      │ 1540  │\n│ 7   │ B      │ 1555  │\n⋮\n│ 23  │ E      │ 1515  │\n│ 24  │ E      │ 1635  │\n│ 25  │ E      │ 1625  │\n│ 26  │ F      │ 1520  │\n│ 27  │ F      │ 1455  │\n│ 28  │ F      │ 1450  │\n│ 29  │ F      │ 1480  │\n│ 30  │ F      │ 1445  │\n\njulia> describe(dyestuff)\n2×8 DataFrames.DataFrame. Omitted printing of 1 columns\n│ Row │ variable │ mean   │ min  │ median │ max  │ nunique │ nmissing │\n│     │ Symbol   │ Union… │ Any  │ Union… │ Any  │ Union…  │ Nothing  │\n├─────┼──────────┼────────┼──────┼────────┼──────┼─────────┼──────────┤\n│ 1   │ batch    │        │ A    │        │ F    │ 6       │          │\n│ 2   │ yield    │ 1527.5 │ 1440 │ 1530.0 │ 1635 │         │          │\n","category":"page"},{"location":"constructors/#Models-with-simple,-scalar-random-effects-1","page":"Model constructors","title":"Models with simple, scalar random effects","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The formula language in Julia is similar to that in R except that the formula must be enclosed in a call to the @formula macro. A basic model with simple, scalar random effects for the levels of G (the batch of an intermediate product, in this case) is declared and fit as","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fm1 = fit!(LinearMixedModel(@formula(yield ~ 1 + (1|batch)),\n    dyestuff))\nLinear mixed model fit by maximum likelihood\n yield ~ 1 + (1 | batch)\n   logLik   -2 logLik     AIC        BIC    \n -163.66353  327.32706  333.32706  337.53065\n\nVariance components:\n            Column    Variance  Std.Dev. \nbatch    (Intercept)  1388.3333 37.260345\nResidual              2451.2500 49.510100\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)    1527.5    17.6946    86.33   <1e-99\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"An alternative expression is","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fm1 = fit(MixedModel, @formula(yield ~ 1 + (1|batch)), dyestuff)\nLinear mixed model fit by maximum likelihood\n yield ~ 1 + (1 | batch)\n   logLik   -2 logLik     AIC        BIC    \n -163.66353  327.32706  333.32706  337.53065\n\nVariance components:\n            Column    Variance  Std.Dev. \nbatch    (Intercept)  1388.3333 37.260345\nResidual              2451.2500 49.510100\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)    1527.5    17.6946    86.33   <1e-99\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"(If you are new to Julia you may find that this first fit takes an unexpectedly long time, due to Just-In-Time (JIT) compilation of the code. The second and subsequent calls to such functions are much faster.)","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> @time fit(MixedModel, @formula(yield ~ 1 + (1|batch)), dyestuff);\n  0.455844 seconds (910.00 k allocations: 47.361 MiB, 3.25% gc time)\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"By default, the model fit is by maximum likelihood.  To use the REML criterion instead, add the optional named argument REML = true to the call to fit!","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fm1R = fit(MixedModel, @formula(yield ~ 1 + (1|batch)),\n    dyestuff, REML=true)\nLinear mixed model fit by REML\n yield ~ 1 + (1 | batch)\n REML criterion at convergence: 319.6542768422538\n\nVariance components:\n            Column    Variance  Std.Dev. \nbatch    (Intercept)  1764.0506 42.000602\nResidual              2451.2499 49.510099\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)    1527.5    19.3834    78.80   <1e-99\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#Simple,-scalar-random-effects-1","page":"Model constructors","title":"Simple, scalar random effects","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"A simple, scalar random effects term in a mixed-effects model formula is of the form (1|G). All random effects terms end with |G where G is the grouping factor for the random effect. The name or, more generally, the expression G should evaluate to a categorical array that has a distinct set of levels. The random effects are associated with the levels of the grouping factor.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"A scalar random effect is, as the name implies, one scalar value for each level of the grouping factor. A simple, scalar random effects term is of the form, (1|G). It corresponds to a shift in the intercept for each level of the grouping factor.","category":"page"},{"location":"constructors/#Models-with-vector-valued-random-effects-1","page":"Model constructors","title":"Models with vector-valued random effects","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The sleepstudy data are observations of reaction time, reaction, on several subjects, G, after 0 to 9 days of sleep deprivation, days. A model with random intercepts and random slopes for each subject, allowing for within-subject correlation of the slope and intercept, is fit as","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> sleepstudy = MixedModels.dataset(:sleepstudy)\n180×3 DataFrames.DataFrame\n│ Row │ subj   │ days │ reaction │\n│     │ String │ Int8 │ Float64  │\n├─────┼────────┼──────┼──────────┤\n│ 1   │ S308   │ 0    │ 249.56   │\n│ 2   │ S308   │ 1    │ 258.705  │\n│ 3   │ S308   │ 2    │ 250.801  │\n│ 4   │ S308   │ 3    │ 321.44   │\n│ 5   │ S308   │ 4    │ 356.852  │\n│ 6   │ S308   │ 5    │ 414.69   │\n│ 7   │ S308   │ 6    │ 382.204  │\n⋮\n│ 173 │ S372   │ 2    │ 297.597  │\n│ 174 │ S372   │ 3    │ 310.632  │\n│ 175 │ S372   │ 4    │ 287.173  │\n│ 176 │ S372   │ 5    │ 329.608  │\n│ 177 │ S372   │ 6    │ 334.482  │\n│ 178 │ S372   │ 7    │ 343.22   │\n│ 179 │ S372   │ 8    │ 369.142  │\n│ 180 │ S372   │ 9    │ 364.124  │\n\njulia> fm2 = fit(MixedModel, @formula(reaction ~ 1+days + (1+days|subj)), sleepstudy)\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1763.93934 1783.09709\n\nVariance components:\n            Column    Variance  Std.Dev.   Corr.\nsubj     (Intercept)  565.51068 23.780469\n         days          32.68212  5.716828  0.08\nResidual              654.94145 25.591824\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.63226    37.91   <1e-99\ndays          10.4673    1.50224     6.97   <1e-11\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#Models-with-multiple,-scalar-random-effects-terms-1","page":"Model constructors","title":"Models with multiple, scalar random-effects terms","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"A model for the Penicillin data incorporates random effects for the plate, G, and for the sample, H. As every sample is used on every plate these two factors are crossed.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> penicillin = MixedModels.dataset(:penicillin)\n144×3 DataFrames.DataFrame\n│ Row │ plate  │ sample │ diameter │\n│     │ String │ String │ Int8     │\n├─────┼────────┼────────┼──────────┤\n│ 1   │ a      │ A      │ 27       │\n│ 2   │ a      │ B      │ 23       │\n│ 3   │ a      │ C      │ 26       │\n│ 4   │ a      │ D      │ 23       │\n│ 5   │ a      │ E      │ 23       │\n│ 6   │ a      │ F      │ 21       │\n│ 7   │ b      │ A      │ 27       │\n⋮\n│ 137 │ w      │ E      │ 24       │\n│ 138 │ w      │ F      │ 19       │\n│ 139 │ x      │ A      │ 24       │\n│ 140 │ x      │ B      │ 21       │\n│ 141 │ x      │ C      │ 24       │\n│ 142 │ x      │ D      │ 22       │\n│ 143 │ x      │ E      │ 21       │\n│ 144 │ x      │ F      │ 18       │\n\njulia> fm4 = fit(MixedModel,@formula(diameter ~ 1+(1|plate)+(1|sample)),\n    penicillin)\nLinear mixed model fit by maximum likelihood\n diameter ~ 1 + (1 | plate) + (1 | sample)\n   logLik   -2 logLik     AIC        BIC    \n -166.09417  332.18835  340.18835  352.06760\n\nVariance components:\n            Column    Variance   Std.Dev. \nplate    (Intercept)  0.71497945 0.8455646\nsample   (Intercept)  3.13519425 1.7706480\nResidual              0.30242640 0.5499331\n Number of obs: 144; levels of grouping factors: 24, 6\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)   22.9722   0.744596    30.85   <1e-99\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"In contrast the sample, G, grouping factor is nested within the batch, H, grouping factor in the Pastes data. That is, each level of G occurs in conjunction with only one level of H.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> pastes = MixedModels.dataset(:pastes)\n60×4 DataFrames.DataFrame\n│ Row │ batch  │ cask   │ sample │ strength │\n│     │ String │ String │ String │ Float64  │\n├─────┼────────┼────────┼────────┼──────────┤\n│ 1   │ A      │ a      │ A:a    │ 62.8     │\n│ 2   │ A      │ a      │ A:a    │ 62.6     │\n│ 3   │ A      │ b      │ A:b    │ 60.1     │\n│ 4   │ A      │ b      │ A:b    │ 62.3     │\n│ 5   │ A      │ c      │ A:c    │ 62.7     │\n│ 6   │ A      │ c      │ A:c    │ 63.1     │\n│ 7   │ B      │ a      │ B:a    │ 60.0     │\n⋮\n│ 53  │ I      │ c      │ I:c    │ 57.7     │\n│ 54  │ I      │ c      │ I:c    │ 56.8     │\n│ 55  │ J      │ a      │ J:a    │ 58.3     │\n│ 56  │ J      │ a      │ J:a    │ 59.3     │\n│ 57  │ J      │ b      │ J:b    │ 59.2     │\n│ 58  │ J      │ b      │ J:b    │ 59.2     │\n│ 59  │ J      │ c      │ J:c    │ 58.9     │\n│ 60  │ J      │ c      │ J:c    │ 56.6     │\n\njulia> fm5 = fit(MixedModel, @formula(strength ~ 1 + (1|sample) + (1|batch)), pastes)\nLinear mixed model fit by maximum likelihood\n strength ~ 1 + (1 | sample) + (1 | batch)\n   logLik   -2 logLik     AIC        BIC    \n -123.99723  247.99447  255.99447  264.37184\n\nVariance components:\n            Column    Variance   Std.Dev.  \nsample   (Intercept)  8.43361634 2.90406893\nbatch    (Intercept)  1.19918042 1.09507097\nResidual              0.67800208 0.82340882\n Number of obs: 60; levels of grouping factors: 30, 10\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)   60.0533   0.642136    93.52   <1e-99\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"In observational studies it is common to encounter partially crossed grouping factors. For example, the InstEval data are course evaluations by students, G, of instructors, H. Additional covariates include the academic department, I, in which the course was given and A, whether or not it was a service course.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> insteval = MixedModels.dataset(:insteval)\n73421×7 DataFrames.DataFrame\n│ Row   │ s      │ d      │ dept   │ studage │ lectage │ service │ y    │\n│       │ String │ String │ String │ String  │ String  │ String  │ Int8 │\n├───────┼────────┼────────┼────────┼─────────┼─────────┼─────────┼──────┤\n│ 1     │ S0001  │ I1002  │ D02    │ 2       │ 2       │ N       │ 5    │\n│ 2     │ S0001  │ I1050  │ D06    │ 2       │ 1       │ Y       │ 2    │\n│ 3     │ S0001  │ I1582  │ D02    │ 2       │ 2       │ N       │ 5    │\n│ 4     │ S0001  │ I2050  │ D03    │ 2       │ 2       │ Y       │ 3    │\n│ 5     │ S0002  │ I0115  │ D05    │ 2       │ 1       │ N       │ 2    │\n│ 6     │ S0002  │ I0756  │ D05    │ 2       │ 1       │ N       │ 4    │\n│ 7     │ S0003  │ I0007  │ D11    │ 2       │ 1       │ Y       │ 4    │\n⋮\n│ 73414 │ S2972  │ I1749  │ D10    │ 4       │ 1       │ N       │ 5    │\n│ 73415 │ S2972  │ I1780  │ D11    │ 4       │ 4       │ Y       │ 3    │\n│ 73416 │ S2972  │ I1782  │ D04    │ 4       │ 4       │ Y       │ 5    │\n│ 73417 │ S2972  │ I2034  │ D06    │ 4       │ 1       │ Y       │ 3    │\n│ 73418 │ S2972  │ I2079  │ D11    │ 4       │ 3       │ Y       │ 4    │\n│ 73419 │ S2972  │ I2084  │ D10    │ 4       │ 1       │ N       │ 5    │\n│ 73420 │ S2972  │ I2110  │ D04    │ 4       │ 2       │ Y       │ 1    │\n│ 73421 │ S2972  │ I2121  │ D02    │ 4       │ 2       │ Y       │ 3    │\n\njulia> fm6 = fit(MixedModel,@formula(y ~ 1+ service*dept +(1|s)+(1|d)), insteval)\nLinear mixed model fit by maximum likelihood\n y ~ 1 + service + dept + service & dept + (1 | s) + (1 | d)\n     logLik        -2 logLik          AIC             BIC       \n -1.18792777×10⁵  2.37585553×10⁵  2.37647553×10⁵  2.37932876×10⁵\n\nVariance components:\n            Column     Variance   Std.Dev.  \ns        (Intercept)  0.105417971 0.32468134\nd        (Intercept)  0.258416365 0.50834670\nResidual              1.384727773 1.17674457\n Number of obs: 73421; levels of grouping factors: 2972, 1128\n\n  Fixed-effects parameters:\n────────────────────────────────────────────────────────────────\n                           Estimate  Std.Error  z value  P(>|z|)\n────────────────────────────────────────────────────────────────\n(Intercept)              3.27628     0.0793647    41.28   <1e-99\nservice: Y               0.0116044   0.0699321     0.17   0.8682\ndept: D02               -0.0411091   0.120331     -0.34   0.7326\ndept: D03                0.00967413  0.108411      0.09   0.9289\ndept: D04                0.105017    0.0944964     1.11   0.2664\ndept: D05                0.0828643   0.11148       0.74   0.4573\ndept: D06               -0.01194     0.0978342    -0.12   0.9029\ndept: D07                0.0992679   0.110598      0.90   0.3694\ndept: D08                0.0575337   0.127935      0.45   0.6529\ndept: D09               -0.00263181  0.107085     -0.02   0.9804\ndept: D10               -0.223423    0.099838     -2.24   0.0252\ndept: D11                0.0129816   0.110639      0.12   0.9066\ndept: D12                0.00503825  0.0944243     0.05   0.9574\ndept: D14                0.0050827   0.109041      0.05   0.9628\ndept: D15               -0.0466719   0.101942     -0.46   0.6471\nservice: Y & dept: D02  -0.144352    0.0929527    -1.55   0.1204\nservice: Y & dept: D03   0.0174078   0.0927237     0.19   0.8511\nservice: Y & dept: D04  -0.0381262   0.0810901    -0.47   0.6382\nservice: Y & dept: D05   0.0596632   0.123952      0.48   0.6303\nservice: Y & dept: D06  -0.254044    0.080781     -3.14   0.0017\nservice: Y & dept: D07  -0.151634    0.11157      -1.36   0.1741\nservice: Y & dept: D08   0.0508942   0.112189      0.45   0.6501\nservice: Y & dept: D09  -0.259448    0.0899448    -2.88   0.0039\nservice: Y & dept: D10   0.25907     0.111369      2.33   0.0200\nservice: Y & dept: D11  -0.276577    0.0819621    -3.37   0.0007\nservice: Y & dept: D12  -0.0418489   0.0792928    -0.53   0.5977\nservice: Y & dept: D14  -0.256742    0.0931016    -2.76   0.0058\nservice: Y & dept: D15   0.24042     0.0982071     2.45   0.0144\n────────────────────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#Simplifying-the-random-effect-correlation-structure-1","page":"Model constructors","title":"Simplifying the random effect correlation structure","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"MixedEffects.jl estimates not only the variance of the effects for each random effect level, but also the correlation between the random effects for different predictors. So, for the model of the sleepstudy data above, one of the parameters that is estimated is the correlation between each subject's random intercept (i.e., their baseline reaction time) and slope (i.e., their particular change in reaction time over days of sleep deprivation). In some cases, you may wish to simplify the random effects structure by removing these correlation parameters. This often arises when there are many random effects you want to estimate (as is common in psychological experiments with many conditions and covariates), since the number of random effects parameters increases as the square of the number of predictors, making these models difficult to estimate from limited data.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"A model with uncorrelated random effects for the intercept and slope by subject is fit as","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fm3 = fit!(zerocorr!(LinearMixedModel(@formula(reaction ~ 1+days+(1+days|subj)),\n    sleepstudy)))\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -876.00163 1752.00326 1762.00326 1777.96804\n\nVariance components:\n            Column    Variance  Std.Dev.   Corr.\nsubj     (Intercept)  584.258971 24.17145\n         days          33.632805  5.79938   .  \nResidual              653.115782 25.55613\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.70771    37.48   <1e-99\ndays          10.4673    1.51931     6.89   <1e-11\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Note that the use of zerocorr! requires the model to be constructed, then altered to eliminate the correlation of the random effects, then fit with a call to the mutating function, fit!.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"zerocorr!","category":"page"},{"location":"constructors/#MixedModels.zerocorr!","page":"Model constructors","title":"MixedModels.zerocorr!","text":"zerocorr!(m::LinearMixedModel[, trmnms::Vector{Symbol}])\n\nRewrite the random effects specification for the grouping factors in trmnms to zero correlation parameter.\n\nThe default for trmnms is all the names of random-effects terms.\n\nA random effects term is in the zero correlation parameter configuration when the off-diagonal elements of λ are all zero - hence there are no correlation parameters in that term being estimated.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The special syntax zerocorr can be applied to individual random effects terms inside the @formula:","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"zerocorr","category":"page"},{"location":"constructors/#MixedModels.zerocorr","page":"Model constructors","title":"MixedModels.zerocorr","text":"zerocorr(term::RandomEffectsTerm)\n\nRemove correlations between random effects in term.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fit(MixedModel, @formula(reaction ~ 1 + days + zerocorr(1+days|subj)), sleepstudy)\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + MixedModels.ZeroCorr((1 + days | subj))\n   logLik   -2 logLik     AIC        BIC    \n -876.00163 1752.00326 1762.00326 1777.96804\n\nVariance components:\n            Column    Variance  Std.Dev.   Corr.\nsubj     (Intercept)  584.258971 24.17145\n         days          33.632805  5.79938   .  \nResidual              653.115782 25.55613\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.70771    37.48   <1e-99\ndays          10.4673    1.51931     6.89   <1e-11\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Alternatively, correlations between parameters can be removed by including them as separate random effects terms:","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fit(MixedModel, @formula(reaction ~ 1+days+(1|subj)+(0+days|subj)), sleepstudy)\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 | subj) + (0 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -876.00163 1752.00326 1762.00326 1777.96804\n\nVariance components:\n            Column    Variance  Std.Dev.   Corr.\nsubj     (Intercept)  584.258971 24.17145\n         days          33.632805  5.79938   .  \nResidual              653.115782 25.55613\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.70771    37.48   <1e-99\ndays          10.4673    1.51931     6.89   <1e-11\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Note that it is necessary to explicitly block the inclusion of an intercept term by adding 0 in the random-effects term (0+days|subj).","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Finally, for predictors that are categorical, MixedModels.jl will estimate correlations between each level. Notice the large number of correlation parameters if we treat days as a categorical variable by giving it contrasts:","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fit(MixedModel, @formula(reaction ~ 1+days+(1+days|subj)), sleepstudy,\n    contrasts=Dict(:days=>DummyCoding()))\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n  -805.9946  1611.9893  1743.9893  1954.7244\n\nVariance components:\n            Column     Variance   Std.Dev.    Corr.\nsubj     (Intercept)   953.311441 30.8757420\n         days: 1       493.786396 22.2213050 -0.30\n         days: 2       911.389765 30.1892326 -0.57  0.75\n         days: 3      1264.387554 35.5582276 -0.37  0.72  0.87\n         days: 4      1481.511685 38.4904103 -0.31  0.58  0.67  0.91\n         days: 5      2294.445791 47.9003736 -0.25  0.46  0.45  0.70  0.85\n         days: 6      3849.198322 62.0419078 -0.27  0.30  0.48  0.70  0.77  0.75\n         days: 7      1806.989968 42.5087046 -0.15  0.22  0.47  0.50  0.63  0.64  0.71\n         days: 8      3152.168191 56.1441733 -0.20  0.28  0.36  0.56  0.73  0.90  0.73  0.74\n         days: 9      3078.933165 55.4881354  0.06  0.26  0.16  0.38  0.59  0.78  0.38  0.53  0.85\nResidual                20.895435  4.5711525\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n───────────────────────────────────────────────────\n              Estimate  Std.Error  z value  P(>|z|)\n───────────────────────────────────────────────────\n(Intercept)  256.652      7.35681    34.89   <1e-99\ndays: 1        7.84395    5.45475     1.44   0.1504\ndays: 2        8.71009    7.27698     1.20   0.2313\ndays: 3       26.3402     8.51854     3.09   0.0020\ndays: 4       31.9976     9.19934     3.48   0.0005\ndays: 5       51.8667    11.3926      4.55   <1e-5 \ndays: 6       55.5265    14.7026      3.78   0.0002\ndays: 7       62.0988    10.1346      6.13   <1e-9 \ndays: 8       79.9777    13.3207      6.00   <1e-8 \ndays: 9       94.1994    13.1671      7.15   <1e-12\n───────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Separating the 1 and days random effects into separate terms removes the correlations between the intercept and the levels of days, but not between the levels themselves:","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fit(MixedModel, @formula(reaction ~ 1+days+(1|subj)+(0+days|subj)), sleepstudy,\n    contrasts=Dict(:days=>DummyCoding()))\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 | subj) + (0 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -805.39921 1610.79843 1744.79843 1958.72654\n\nVariance components:\n            Column     Variance    Std.Dev.    Corr.\nsubj     (Intercept)     2.5415778  1.5942327\n         days: 0       954.2404965 30.8907834   .  \n         days: 1      1034.6227156 32.1655517   .    0.75\n         days: 2       799.0319005 28.2671523   .    0.48  0.79\n         days: 3      1403.9147478 37.4688504   .    0.47  0.75  0.89\n         days: 4      1685.8227666 41.0587721   .    0.45  0.66  0.71  0.92\n         days: 5      2506.8988117 50.0689406   .    0.37  0.53  0.50  0.73  0.86\n         days: 6      3744.9635888 61.1961076   .    0.22  0.32  0.46  0.68  0.76  0.75\n         days: 7      2346.0430464 48.4359685   .    0.50  0.48  0.60  0.61  0.70  0.69  0.71\n         days: 8      3397.2407258 58.2858536   .    0.33  0.40  0.41  0.60  0.75  0.91  0.73  0.77\n         days: 9      4210.3830545 64.8874645   .    0.52  0.55  0.43  0.57  0.72  0.84  0.46  0.66  0.89\nResidual                18.5798752  4.3104379\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n───────────────────────────────────────────────────\n              Estimate  Std.Error  z value  P(>|z|)\n───────────────────────────────────────────────────\n(Intercept)  256.652      7.36117    34.87   <1e-99\ndays: 1        7.84395    5.45673     1.44   0.1506\ndays: 2        8.71009    7.286       1.20   0.2319\ndays: 3       26.3402     8.52595     3.09   0.0020\ndays: 4       31.9976     9.20819     3.47   0.0005\ndays: 5       51.8667    11.4006      4.55   <1e-5 \ndays: 6       55.5265    14.7128      3.77   0.0002\ndays: 7       62.0988    10.1305      6.13   <1e-9 \ndays: 8       79.9777    13.3289      6.00   <1e-8 \ndays: 9       94.1994    13.1566      7.16   <1e-12\n───────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"But using zerocorr on the individual terms (or zerocorr! on the constructed model object as above) does remove the correlations between the levels:","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> fit(MixedModel, @formula(reaction ~ 1+days+zerocorr(1+days|subj)), sleepstudy,\n    contrasts=Dict(:days=>DummyCoding()))\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + MixedModels.ZeroCorr((1 + days | subj))\n   logLik   -2 logLik     AIC        BIC    \n  -882.9138  1765.8276  1807.8276  1874.8797\n\nVariance components:\n            Column    Variance   Std.Dev.   Corr.\nsubj     (Intercept)   958.62658 30.961695\n         days: 1         0.00000  0.000000   .  \n         days: 2         0.00000  0.000000   .     .  \n         days: 3         0.00000  0.000000   .     .     .  \n         days: 4         0.00000  0.000000   .     .     .     .  \n         days: 5       519.69590 22.796840   .     .     .     .     .  \n         days: 6      1703.74577 41.276455   .     .     .     .     .     .  \n         days: 7       608.70979 24.672045   .     .     .     .     .     .     .  \n         days: 8      1273.04706 35.679785   .     .     .     .     .     .     .     .  \n         days: 9      1753.84187 41.878895   .     .     .     .     .     .     .     .     .  \nResidual               434.86824 20.853495\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n───────────────────────────────────────────────────\n              Estimate  Std.Error  z value  P(>|z|)\n───────────────────────────────────────────────────\n(Intercept)  256.652      8.79866    29.17   <1e-99\ndays: 1        7.84395    6.95116     1.13   0.2591\ndays: 2        8.71009    6.95116     1.25   0.2102\ndays: 3       26.3402     6.95116     3.79   0.0002\ndays: 4       31.9976     6.95116     4.60   <1e-5 \ndays: 5       51.8667     8.78582     5.90   <1e-8 \ndays: 6       55.5265    11.9571      4.64   <1e-5 \ndays: 7       62.0988     9.06289     6.85   <1e-11\ndays: 8       79.9777    10.9107      7.33   <1e-12\ndays: 9       94.1994    12.0729      7.80   <1e-14\n───────────────────────────────────────────────────\n\njulia> fit(MixedModel, @formula(reaction ~ 1+days+(1|subj)+zerocorr(0+days|subj)),sleepstudy,\n    contrasts=Dict(:days=>DummyCoding()))\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 | subj) + MixedModels.ZeroCorr((0 + days | subj))\n   logLik   -2 logLik     AIC        BIC    \n  -878.9843  1757.9686  1801.9686  1872.2137\n\nVariance components:\n            Column      Variance     Std.Dev.    Corr.\nsubj     (Intercept)  1134.94156070 33.68889373\n         days: 0       776.51958520 27.86610100   .  \n         days: 1       358.03871198 18.92191090   .     .  \n         days: 2       221.43623202 14.88073358   .     .     .  \n         days: 3         0.19919338  0.44631086   .     .     .     .  \n         days: 4        44.71146612  6.68666330   .     .     .     .     .  \n         days: 5       670.63147167 25.89655328   .     .     .     .     .     .  \n         days: 6      1740.20863255 41.71580795   .     .     .     .     .     .     .  \n         days: 7       909.45128898 30.15711009   .     .     .     .     .     .     .     .  \n         days: 8      1458.46963229 38.18991532   .     .     .     .     .     .     .     .     .  \n         days: 9      2028.97616421 45.04415794   .     .     .     .     .     .     .     .     .     .  \nResidual               180.60832564 13.43905970\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n───────────────────────────────────────────────────\n              Estimate  Std.Error  z value  P(>|z|)\n───────────────────────────────────────────────────\n(Intercept)  256.652     10.7808     23.81   <1e-99\ndays: 1        7.84395    9.11584     0.86   0.3895\ndays: 2        8.71009    8.68962     1.00   0.3162\ndays: 3       26.3402     7.95101     3.31   0.0009\ndays: 4       31.9976     8.10503     3.95   <1e-4 \ndays: 5       51.8666    10.0232      5.17   <1e-6 \ndays: 6       55.5264    12.6446      4.39   <1e-4 \ndays: 7       62.0988    10.6646      5.82   <1e-8 \ndays: 8       79.9777    12.0097      6.66   <1e-10\ndays: 9       94.1994    13.2638      7.10   <1e-11\n───────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#Fitting-generalized-linear-mixed-models-1","page":"Model constructors","title":"Fitting generalized linear mixed models","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"To create a GLMM representation","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"GeneralizedLinearMixedModel","category":"page"},{"location":"constructors/#MixedModels.GeneralizedLinearMixedModel","page":"Model constructors","title":"MixedModels.GeneralizedLinearMixedModel","text":"GeneralizedLinearMixedModel\n\nGeneralized linear mixed-effects model representation\n\nFields\n\nLMM: a LinearMixedModel - the local approximation to the GLMM.\nβ: the pivoted and possibly truncated fixed-effects vector\nβ₀: similar to β. Used in the PIRLS algorithm if step-halving is needed.\nθ: covariance parameter vector\nb: similar to u, equivalent to broadcast!(*, b, LMM.Λ, u)\nu: a vector of matrices of random effects\nu₀: similar to u.  Used in the PIRLS algorithm if step-halving is needed.\nresp: a GlmResp object\nη: the linear predictor\nwt: vector of prior case weights, a value of T[] indicates equal weights.\n\nThe following fields are used in adaptive Gauss-Hermite quadrature, which applies only to models with a single random-effects term, in which case their lengths are the number of levels in the grouping factor for that term.  Otherwise they are zero-length vectors.\n\ndevc: vector of deviance components\ndevc0: vector of deviance components at offset of zero\nsd: approximate standard deviation of the conditional density\nmult: multiplier\n\nProperties\n\nIn addition to the fieldnames, the following names are also accessible through the . extractor\n\ntheta: synonym for θ\nbeta: synonym for β\nσ or sigma: common scale parameter (value is NaN for distributions without a scale parameter)\nlowerbd: vector of lower bounds on the combined elements of β and θ\nformula, trms, A, L, and optsum: fields of the LMM field\nX: fixed-effects model matrix\ny: response vector\n\n\n\n\n\n","category":"type"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"the distribution family for the response, and possibly the link function, must be specified.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> verbagg = MixedModels.dataset(:verbagg)\n7584×9 DataFrames.DataFrame. Omitted printing of 2 columns\n│ Row  │ subj   │ item        │ anger │ gender │ btype  │ situ   │ mode   │\n│      │ String │ String      │ Int8  │ String │ String │ String │ String │\n├──────┼────────┼─────────────┼───────┼────────┼────────┼────────┼────────┤\n│ 1    │ S001   │ S1WantCurse │ 20    │ M      │ curse  │ other  │ want   │\n│ 2    │ S002   │ S1WantCurse │ 11    │ M      │ curse  │ other  │ want   │\n│ 3    │ S003   │ S1WantCurse │ 17    │ F      │ curse  │ other  │ want   │\n│ 4    │ S004   │ S1WantCurse │ 21    │ F      │ curse  │ other  │ want   │\n│ 5    │ S005   │ S1WantCurse │ 17    │ F      │ curse  │ other  │ want   │\n│ 6    │ S006   │ S1WantCurse │ 21    │ F      │ curse  │ other  │ want   │\n│ 7    │ S007   │ S1WantCurse │ 39    │ F      │ curse  │ other  │ want   │\n⋮\n│ 7577 │ S309   │ S4DoShout   │ 14    │ F      │ shout  │ self   │ do     │\n│ 7578 │ S310   │ S4DoShout   │ 23    │ F      │ shout  │ self   │ do     │\n│ 7579 │ S311   │ S4DoShout   │ 24    │ M      │ shout  │ self   │ do     │\n│ 7580 │ S312   │ S4DoShout   │ 17    │ M      │ shout  │ self   │ do     │\n│ 7581 │ S313   │ S4DoShout   │ 20    │ F      │ shout  │ self   │ do     │\n│ 7582 │ S314   │ S4DoShout   │ 25    │ F      │ shout  │ self   │ do     │\n│ 7583 │ S315   │ S4DoShout   │ 23    │ F      │ shout  │ self   │ do     │\n│ 7584 │ S316   │ S4DoShout   │ 12    │ F      │ shout  │ self   │ do     │\n\njulia> verbaggform = @formula(r2 ~ 1+anger+gender+btype+situ+mode+(1|subj)+(1|item));\n\njulia> gm1 = fit(MixedModel, verbaggform, verbagg, Bernoulli())\nGeneralized Linear Mixed Model fit by maximum likelihood (nAGQ = 1)\n  r2 ~ 1 + anger + gender + btype + situ + mode + (1 | subj) + (1 | item)\n  Distribution: Bernoulli{Float64}\n  Link: LogitLink()\n\n  Deviance: 8135.8329\n\nVariance components:\n        Column    Variance   Std.Dev.  \nsubj (Intercept)  1.64355228 1.28201103\nitem (Intercept)  0.10735916 0.32765708\n\n Number of obs: 7584; levels of grouping factors: 316, 24\n\nFixed-effects parameters:\n─────────────────────────────────────────────────────\n                Estimate  Std.Error  z value  P(>|z|)\n─────────────────────────────────────────────────────\n(Intercept)   -0.153108   0.368769     -0.42   0.6780\nanger          0.0573997  0.0160372     3.58   0.0003\ngender: M      0.32076    0.18304       1.75   0.0797\nbtype: scold  -1.0598     0.176295     -6.01   <1e-8 \nbtype: shout  -2.10385    0.178553    -11.78   <1e-31\nsitu: self    -1.05436    0.144739     -7.28   <1e-12\nmode: want     0.707002   0.14456       4.89   <1e-5 \n─────────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The canonical link, which is GLM.LogitLink for the Bernoulli distribution, is used if no explicit link is specified.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Note that, in keeping with convention in the GLM package, the distribution family for a binary (i.e. 0/1) response is the Bernoulli distribution. The Binomial distribution is only used when the response is the fraction of trials returning a positive, in which case the number of trials must be specified as the case weights.","category":"page"},{"location":"constructors/#Optional-arguments-to-fit!-1","page":"Model constructors","title":"Optional arguments to fit!","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"An alternative approach is to create the GeneralizedLinearMixedModel object then call fit! on it. In this form optional arguments fast and/or nAGQ can be passed to the optimization process.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"As the name implies, fast=true, provides a faster but somewhat less accurate fit. These fits may suffice for model comparisons.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> gm1a = fit!(GeneralizedLinearMixedModel(verbaggform, verbagg,\n    Bernoulli()), fast=true)\nGeneralized Linear Mixed Model fit by maximum likelihood (nAGQ = 1)\n  r2 ~ 1 + anger + gender + btype + situ + mode + (1 | subj) + (1 | item)\n  Distribution: Bernoulli{Float64}\n  Link: LogitLink()\n\n  Deviance: 8136.1709\n\nVariance components:\n        Column    Variance   Std.Dev.  \nsubj (Intercept)  1.63612243 1.27911002\nitem (Intercept)  0.10838339 0.32921633\n\n Number of obs: 7584; levels of grouping factors: 316, 24\n\nFixed-effects parameters:\n─────────────────────────────────────────────────────\n                Estimate  Std.Error  z value  P(>|z|)\n─────────────────────────────────────────────────────\n(Intercept)   -0.130559   0.368313     -0.35   0.7230\nanger          0.0543802  0.0159982     3.40   0.0007\ngender: M      0.304244   0.182603      1.67   0.0957\nbtype: scold  -1.01749    0.176943     -5.75   <1e-8 \nbtype: shout  -2.02067    0.179146    -11.28   <1e-28\nsitu: self    -1.01255    0.145248     -6.97   <1e-11\nmode: want     0.679102   0.145074      4.68   <1e-5 \n─────────────────────────────────────────────────────\n\njulia> deviance(gm1a) - deviance(gm1)\n0.33801423286422505\n\njulia> @time fit!(GeneralizedLinearMixedModel(verbaggform, verbagg,\n    Bernoulli()));\n  4.770445 seconds (28.27 M allocations: 233.790 MiB, 1.42% gc time)\n\njulia> @time fit!(GeneralizedLinearMixedModel(verbaggform, verbagg,\n    Bernoulli()), fast=true);\n  0.470534 seconds (2.49 M allocations: 28.758 MiB)\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The optional argument nAGQ=k causes evaluation of the deviance function to use a k point adaptive Gauss-Hermite quadrature rule. This method only applies to models with a single, simple, scalar random-effects term, such as","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> contra = MixedModels.dataset(:contra)\n1934×6 DataFrames.DataFrame\n│ Row  │ dist   │ urban  │ urbdist │ livch  │ age     │ use    │\n│      │ String │ String │ String  │ String │ Float32 │ String │\n├──────┼────────┼────────┼─────────┼────────┼─────────┼────────┤\n│ 1    │ D01    │ Y      │ U01     │ 3+     │ 18.44   │ N      │\n│ 2    │ D01    │ Y      │ U01     │ 0      │ -5.56   │ N      │\n│ 3    │ D01    │ Y      │ U01     │ 2      │ 1.44    │ N      │\n│ 4    │ D01    │ Y      │ U01     │ 3+     │ 8.44    │ N      │\n│ 5    │ D01    │ Y      │ U01     │ 0      │ -13.56  │ N      │\n│ 6    │ D01    │ Y      │ U01     │ 0      │ -11.56  │ N      │\n│ 7    │ D01    │ Y      │ U01     │ 3+     │ 18.44   │ N      │\n⋮\n│ 1927 │ D61    │ N      │ R61     │ 3+     │ 19.44   │ N      │\n│ 1928 │ D61    │ N      │ R61     │ 2      │ -9.56   │ Y      │\n│ 1929 │ D61    │ N      │ R61     │ 2      │ -2.56   │ N      │\n│ 1930 │ D61    │ N      │ R61     │ 3+     │ 14.44   │ N      │\n│ 1931 │ D61    │ N      │ R61     │ 2      │ -4.56   │ N      │\n│ 1932 │ D61    │ N      │ R61     │ 3+     │ 14.44   │ N      │\n│ 1933 │ D61    │ N      │ R61     │ 0      │ -13.56  │ N      │\n│ 1934 │ D61    │ N      │ R61     │ 3+     │ 10.44   │ N      │\n\njulia> contraform = @formula(use ~ 1+age+abs2(age)+livch+urban+(1|dist));\n\njulia> @time gm2 = fit!(GeneralizedLinearMixedModel(contraform,\n    contra, Bernoulli()), nAGQ=9)\n  3.957853 seconds (12.28 M allocations: 385.974 MiB, 3.05% gc time)\nGeneralized Linear Mixed Model fit by maximum likelihood (nAGQ = 9)\n  use ~ 1 + age + :(abs2(age)) + livch + urban + (1 | dist)\n  Distribution: Bernoulli{Float64}\n  Link: LogitLink()\n\n  Deviance: 2372.4588\n\nVariance components:\n        Column    Variance   Std.Dev.  \ndist (Intercept)  0.22228316 0.47146915\n\n Number of obs: 1934; levels of grouping factors: 60\n\nFixed-effects parameters:\n───────────────────────────────────────────────────────\n                Estimate    Std.Error  z value  P(>|z|)\n───────────────────────────────────────────────────────\n(Intercept)  -1.03543     0.171937       -6.02   <1e-8 \nage           0.00353142  0.00909389      0.39   0.6978\nabs2(age)    -0.00456297  0.000714405    -6.39   <1e-9 \nlivch: 1      0.815156    0.159788        5.10   <1e-6 \nlivch: 2      0.916543    0.182362        5.03   <1e-6 \nlivch: 3+     0.915356    0.183022        5.00   <1e-6 \nurban: Y      0.69671     0.118144        5.90   <1e-8 \n───────────────────────────────────────────────────────\n\njulia> @time deviance(fit!(GeneralizedLinearMixedModel(contraform,\n    contra, Bernoulli()), nAGQ=9, fast=true))\n  0.046781 seconds (421.79 k allocations: 5.361 MiB)\n2372.513511279983\n\njulia> @time deviance(fit!(GeneralizedLinearMixedModel(contraform,\n    contra, Bernoulli())))\n  0.233264 seconds (1.93 M allocations: 17.815 MiB)\n2372.7285089345664\n\njulia> @time deviance(fit!(GeneralizedLinearMixedModel(contraform,\n    contra, Bernoulli()), fast=true))\n  0.026430 seconds (204.95 k allocations: 3.187 MiB)\n2372.784349533775\n","category":"page"},{"location":"constructors/#Extractor-functions-1","page":"Model constructors","title":"Extractor functions","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"LinearMixedModel and GeneralizedLinearMixedModel are subtypes of StatsBase.RegressionModel which, in turn, is a subtype of StatsBase.StatisticalModel. Many of the generic extractors defined in the StatsBase package have methods for these models.","category":"page"},{"location":"constructors/#Model-fit-statistics-1","page":"Model constructors","title":"Model-fit statistics","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The statistics describing the quality of the model fit include","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"loglikelihood(::StatisticalModel)\naic\nbic\ndof(::StatisticalModel)\nnobs(::StatisticalModel)","category":"page"},{"location":"constructors/#StatsBase.loglikelihood-Tuple{StatisticalModel}","page":"Model constructors","title":"StatsBase.loglikelihood","text":"loglikelihood(obj::StatisticalModel)\n\nReturn the log-likelihood of the model.\n\n\n\n\n\n","category":"method"},{"location":"constructors/#StatsBase.aic","page":"Model constructors","title":"StatsBase.aic","text":"aic(obj::StatisticalModel)\n\nAkaike's Information Criterion, defined as -2 log L + 2k, with L the likelihood of the model, and k its number of consumed degrees of freedom (as returned by dof).\n\n\n\n\n\n","category":"function"},{"location":"constructors/#StatsBase.bic","page":"Model constructors","title":"StatsBase.bic","text":"bic(obj::StatisticalModel)\n\nBayesian Information Criterion, defined as -2 log L + k log n, with L the likelihood of the model,  k its number of consumed degrees of freedom (as returned by dof), and n the number of observations (as returned by nobs).\n\n\n\n\n\n","category":"function"},{"location":"constructors/#StatsBase.dof-Tuple{StatisticalModel}","page":"Model constructors","title":"StatsBase.dof","text":"dof(obj::StatisticalModel)\n\nReturn the number of degrees of freedom consumed in the model, including when applicable the intercept and the distribution's dispersion parameter.\n\n\n\n\n\n","category":"method"},{"location":"constructors/#StatsBase.nobs-Tuple{StatisticalModel}","page":"Model constructors","title":"StatsBase.nobs","text":"nobs(obj::StatisticalModel)\n\nReturn the number of independent observations on which the model was fitted. Be careful when using this information, as the definition of an independent observation may vary depending on the model, on the format used to pass the data, on the sampling plan (if specified), etc.\n\n\n\n\n\n","category":"method"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> loglikelihood(fm1)\n-163.66352994057004\n\njulia> aic(fm1)\n333.3270598811401\n\njulia> bic(fm1)\n337.5306520261266\n\njulia> dof(fm1)   # 1 fixed effect, 2 variances\n3\n\njulia> nobs(fm1)  # 30 observations\n30\n\njulia> loglikelihood(gm1)\n-4067.9164287365606\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"In general the deviance of a statistical model fit is negative twice the log-likelihood adjusting for the saturated model.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"deviance(::StatisticalModel)","category":"page"},{"location":"constructors/#StatsBase.deviance-Tuple{StatisticalModel}","page":"Model constructors","title":"StatsBase.deviance","text":"deviance(obj::StatisticalModel)\n\nReturn the deviance of the model relative to a reference, which is usually when applicable the saturated model. It is equal, up to a constant, to -2 log L, with L the likelihood of the model.\n\n\n\n\n\n","category":"method"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Because it is not clear what the saturated model corresponding to a particular LinearMixedModel should be, negative twice the log-likelihood is called the objective.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"objective","category":"page"},{"location":"constructors/#MixedModels.objective","page":"Model constructors","title":"MixedModels.objective","text":"objective(m::LinearMixedModel)\n\nReturn negative twice the log-likelihood of model m\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"This value is also accessible as the deviance but the user should bear in mind that this doesn't have all the properties of a deviance which is corrected for the saturated model. For example, it is not necessarily non-negative.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> objective(fm1)\n327.3270598811401\n\njulia> deviance(fm1)\n327.3270598811401\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The value optimized when fitting a GeneralizedLinearMixedModel is the Laplace approximation to the deviance or an adaptive Gauss-Hermite evaluation.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"MixedModels.deviance!","category":"page"},{"location":"constructors/#MixedModels.deviance!","page":"Model constructors","title":"MixedModels.deviance!","text":"deviance!(m::GeneralizedLinearMixedModel, nAGQ=1)\n\nUpdate m.η, m.μ, etc., install the working response and working weights in m.LMM, update m.LMM.A and m.LMM.R, then evaluate the deviance.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> MixedModels.deviance!(gm1)\n8135.832857473123\n","category":"page"},{"location":"constructors/#Fixed-effects-parameter-estimates-1","page":"Model constructors","title":"Fixed-effects parameter estimates","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The coef and fixef extractors both return the maximum likelihood estimates of the fixed-effects coefficients.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"coef\nfixef","category":"page"},{"location":"constructors/#StatsBase.coef","page":"Model constructors","title":"StatsBase.coef","text":"coef(obj::StatisticalModel)\n\nReturn the coefficients of the model.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#MixedModels.fixef","page":"Model constructors","title":"MixedModels.fixef","text":"fixef(m::MixedModel, permuted=true)\n\nReturn the fixed-effects parameter vector estimate of m.\n\nIf permuted is true the vector elements are permuted according to first(m.feterms).piv and truncated to the rank of that term.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> show(coef(fm1))\n[1527.4999999999993]\njulia> show(fixef(fm1))\n[1527.4999999999993]\njulia> show(fixef(gm1))\n[-0.1531079122596256, 0.05739965082409869, 0.3207596120008002, -1.059798143410207, -2.103853567013612, -1.0543587103004148, 0.7070016677683433]","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"An alternative extractor for the fixed-effects coefficient is the β property. Properties whose names are Greek letters usually have an alternative spelling, which is the name of the Greek letter.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> show(fm1.β)\n[1527.4999999999993]\njulia> show(fm1.beta)\n[1527.4999999999993]\njulia> show(gm1.β)\n[-0.1531079122596256, 0.05739965082409869, 0.3207596120008002, -1.059798143410207, -2.103853567013612, -1.0543587103004148, 0.7070016677683433]","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"A full list of property names is returned by propertynames","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> propertynames(fm1)\n(:formula, :sqrtwts, :A, :L, :optsum, :θ, :theta, :β, :beta, :λ, :lambda, :stderror, :σ, :sigma, :σs, :sigmas, :b, :u, :lowerbd, :X, :y, :PCA, :rePCA, :reterms, :feterms, :objective, :pvalues)\n\njulia> propertynames(gm1)\n(:A, :L, :theta, :beta, :coef, :λ, :lambda, :σ, :sigma, :X, :y, :lowerbd, :σρs, :σs, :LMM, :β, :β₀, :θ, :b, :u, :u₀, :resp, :η, :wt, :devc, :devc0, :sd, :mult)\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The variance-covariance matrix of the fixed-effects coefficients is returned by","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"vcov","category":"page"},{"location":"constructors/#StatsBase.vcov","page":"Model constructors","title":"StatsBase.vcov","text":"vcov(obj::StatisticalModel)\n\nReturn the variance-covariance matrix for the coefficients of the model.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> vcov(fm2)\n2×2 Array{Float64,2}:\n 43.9868   -1.37039\n -1.37039   2.25671\n\njulia> vcov(gm1)\n7×7 Array{Float64,2}:\n  0.135991    -0.00514548   -0.00900219   …  -0.0102706    -0.0103987  \n -0.00514548   0.000257193   6.59004e-5      -1.35596e-5    9.385e-6   \n -0.00900219   6.59004e-5    0.0335038       -7.37173e-5    4.81915e-5 \n -0.0153949   -1.31696e-5   -8.48236e-5       0.000243579  -0.000157709\n -0.0152337   -2.66266e-5   -0.000148814      0.000603879  -0.000477013\n -0.0102706   -1.35596e-5   -7.37173e-5   …   0.0209493    -0.00022707 \n -0.0103987    9.385e-6      4.81915e-5      -0.00022707    0.0208975  \n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The standard errors are the square roots of the diagonal elements of the estimated variance-covariance matrix of the fixed-effects coefficient estimators.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"stderror","category":"page"},{"location":"constructors/#StatsBase.stderror","page":"Model constructors","title":"StatsBase.stderror","text":"stderror(obj::StatisticalModel)\n\nReturn the standard errors for the coefficients of the model.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> show(StatsBase.stderror(fm2))\n[6.63225780553425, 1.5022354447437207]\njulia> show(StatsBase.stderror(gm1))\n[0.3687694411883858, 0.016037238192323215, 0.18304040164519833, 0.17629549817108886, 0.17855344797528325, 0.14473865364330543, 0.1445595787861274]","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Finally, the coeftable generic produces a table of coefficient estimates, their standard errors, and their ratio. The p-values quoted here should be regarded as approximations.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"coeftable","category":"page"},{"location":"constructors/#StatsBase.coeftable","page":"Model constructors","title":"StatsBase.coeftable","text":"coeftable(obj::StatisticalModel; level::Real=0.95)\n\nReturn a table of class CoefTable with coefficients and related statistics. level determines the level for confidence intervals (by default, 95%).\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> coeftable(fm2)\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.63226    37.91   <1e-99\ndays          10.4673    1.50224     6.97   <1e-11\n──────────────────────────────────────────────────\n","category":"page"},{"location":"constructors/#Covariance-parameter-estimates-1","page":"Model constructors","title":"Covariance parameter estimates","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The covariance parameters estimates, in the form shown in the model summary, are a VarCorr object","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"VarCorr","category":"page"},{"location":"constructors/#MixedModels.VarCorr","page":"Model constructors","title":"MixedModels.VarCorr","text":"VarCorr\n\nInformation from the fitted random-effects variance-covariance matrices.\n\nMembers\n\nσρ: a NamedTuple of NamedTuples as returned from σρs\ns: the estimate of the per-observation dispersion parameter\n\nThe main purpose of defining this type is to isolate the logic in the show method.\n\n\n\n\n\n","category":"type"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> VarCorr(fm2)\nVariance components:\n            Column    Variance  Std.Dev.   Corr.\nsubj     (Intercept)  565.51068 23.780469\n         days          32.68212  5.716828  0.08\nResidual              654.94145 25.591824\n\n\njulia> VarCorr(gm1)\nVariance components:\n        Column    Variance   Std.Dev.  \nsubj (Intercept)  1.64355228 1.28201103\nitem (Intercept)  0.10735916 0.32765708\n\n\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"Individual components are returned by other extractors","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"varest\nsdest","category":"page"},{"location":"constructors/#MixedModels.varest","page":"Model constructors","title":"MixedModels.varest","text":"varest(m::LinearMixedModel)\n\nReturns the estimate of σ², the variance of the conditional distribution of Y given B.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#MixedModels.sdest","page":"Model constructors","title":"MixedModels.sdest","text":"sdest(m::LinearMixedModel)\n\nReturn the estimate of σ, the standard deviation of the per-observation noise.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> varest(fm2)\n654.9414524552568\n\njulia> sdest(fm2)\n25.59182393764182\n\njulia> fm2.σ\n25.59182393764182\n","category":"page"},{"location":"constructors/#Conditional-modes-of-the-random-effects-1","page":"Model constructors","title":"Conditional modes of the random effects","text":"","category":"section"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The ranef extractor","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"ranef","category":"page"},{"location":"constructors/#MixedModels.ranef","page":"Model constructors","title":"MixedModels.ranef","text":"ranef(m::LinearMixedModel; uscale=false, named=true)\n\nReturn, as a Vector{Vector{T}} (Vector{NamedVector{T}} if named=true), the conditional modes of the random effects in model m.\n\nIf uscale is true the random effects are on the spherical (i.e. u) scale, otherwise on the original scale.\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> ranef(fm1)\n1-element Array{Array{Float64,2},1}:\n [-16.62822143006428 0.3695160317797815 … 53.57982460798647 -42.49434365460914]\n\njulia> fm1.b\n1-element Array{Array{Float64,2},1}:\n [-16.62822143006428 0.3695160317797815 … 53.57982460798647 -42.49434365460914]\n","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"returns the conditional modes of the random effects given the observed data. That is, these are the values that maximize the conditional density of the random effects given the observed data. For a LinearMixedModel these are also the conditional mean values.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"These are sometimes called the best linear unbiased predictors or BLUPs but that name is not particularly meaningful.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"At a superficial level these can be considered as the \"estimates\" of the random effects, with a bit of hand waving, but pursuing this analogy too far usually results in confusion.","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"The corresponding conditional variances are returned by","category":"page"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"condVar","category":"page"},{"location":"constructors/#MixedModels.condVar","page":"Model constructors","title":"MixedModels.condVar","text":"condVar(m::LinearMixedModel)\n\nReturn the conditional variances matrices of the random effects.\n\nThe random effects are returned by ranef as a vector of length k, where k is the number of random effects terms.  The ith element is a matrix of size vᵢ × ℓᵢ  where vᵢ is the size of the vector-valued random effects for each of the ℓᵢ levels of the grouping factor.  Technically those values are the modes of the conditional distribution of the random effects given the observed data.\n\nThis function returns an array of k three dimensional arrays, where the ith array is of size vᵢ × vᵢ × ℓᵢ.  These are the diagonal blocks from the conditional variance-covariance matrix,\n\ns² Λ(Λ'Z'ZΛ + I)⁻¹Λ'\n\n\n\n\n\n","category":"function"},{"location":"constructors/#","page":"Model constructors","title":"Model constructors","text":"julia> condVar(fm1)\n1-element Array{Array{Float64,3},1}:\n [362.3104715146578]\n\n[362.3104715146578]\n\n[362.3104715146578]\n\n[362.3104715146578]\n\n[362.3104715146578]\n\n[362.3104715146578]\n","category":"page"},{"location":"benchmarks/#Benchmark-Report-for-*/home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl*-1","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","text":"","category":"section"},{"location":"benchmarks/#Job-Properties-1","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Job Properties","text":"","category":"section"},{"location":"benchmarks/#","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","text":"Time of benchmark: 2 Oct 2018 - 13:42\nPackage commit: non gi\nJulia commit: 5d4eac\nJulia command flags: None\nEnvironment variables: None","category":"page"},{"location":"benchmarks/#Results-1","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Results","text":"","category":"section"},{"location":"benchmarks/#","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","text":"Below is a table of this job's results, obtained by running the benchmarks. The values listed in the ID column have the structure [parent_group, child_group, ..., key], and can be used to index into the BaseBenchmarks suite to retrieve the corresponding benchmarks. The percentages accompanying time and memory values in the below table are noise tolerances. The \"true\" time/memory value for a given benchmark is expected to fall within this percentage of the reported value. An empty cell means that the value was zero.","category":"page"},{"location":"benchmarks/#","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","text":"ID time GC time memory allocations\n`[\"crossed\", \"Assay:1+A+B*C+(1 G)+(1 H)\"]` 2.943 ms (5%) \n`[\"crossed\", \"Demand:1+U+V+W+X+(1 G)+(1 H)\"]` 2.775 ms (5%) \n`[\"crossed\", \"InstEval:1+A*I+(1 G)+(1 H)\"]` 1.247 s (5%) 114.131 ms\n`[\"crossed\", \"InstEval:1+A+(1 G)+(1 H)+(1 I)\"]` 1.999 s (5%)\n`[\"crossed\", \"Penicillin:1+(1 G)+(1 H)\"]` 2.697 ms (5%) \n`[\"crossed\", \"ScotsSec:1+A+U+V+(1 G)+(1 H)\"]` 4.833 ms (5%) \n`[\"crossed\", \"dialectNL:1+A+T+U+V+W+X+(1 G)+(1 H)+(1 I)\"]` 416.892 ms (5%)\n`[\"crossed\", \"egsingle:1+A+U+V+(1 G)+(1 H)\"]` 31.421 ms (5%) 3.427 ms\n`[\"crossed\", \"ml1m:1+(1 G)+(1 H)\"]` 36.714 s (5%) 225.872 ms\n`[\"crossed\", \"paulsim:1+S+T+U+(1 H)+(1 G)\"]` 14.097 ms (5%) \n`[\"crossedvector\", \"bs10:1+U+V+W+((1+U+V+W) G)+((1+U+V+W) H)\"]` 165.171 ms (5%) 3.149 ms\n`[\"crossedvector\", \"d3:1+U+((1+U) G)+((1+U) H)+((1+U) I)\"]` 49.023 s (5%)\n`[\"crossedvector\", \"d3:1+U+(1 G)+(1 H)+(1 I)\"]` 299.348 ms (5%)\n`[\"crossedvector\", \"gb12:1+S+T+U+V+W+X+Z+((1+S+U+W) G)+((1+S+T+V) H)\"]` 134.101 ms (5%) \n`[\"crossedvector\", \"kb07:1+S+T+U+V+W+X+Z+((1+S+T+U+V+W+X+Z) G)+((1+S+T+U+V+W+X+Z) H)\"]` 3.488 s (5%) 16.508 ms\n`[\"crossedvector\", \"kb07:1+S+T+U+V+W+X+Z+(1 G)+((0+S) G)+((0+T) G)+((0+U) G)+((0+V)\n`[\"nested\", \"Animal:1+(1 G)+(1 H)\"]` 1.261 ms (5%) \n`[\"nested\", \"Chem97:1+(1 G)+(1 H)\"]` 58.460 ms (5%) 6.975 ms\n`[\"nested\", \"Chem97:1+U+(1 G)+(1 H)\"]` 59.353 ms (5%) 7.019 ms\n`[\"nested\", \"Genetics:1+A+(1 G)+(1 H)\"]` 2.062 ms (5%) \n`[\"nested\", \"Pastes:1+(1 G)+(1 H)\"]` 2.298 ms (5%) \n`[\"nested\", \"Semi2:1+A+(1 G)+(1 H)\"]` 2.309 ms (5%) \n`[\"simplescalar\", \"Alfalfa:1+A*B+(1 G)\"]` 1.210 ms (5%)  208.80 KiB (1%)\n`[\"simplescalar\", \"Alfalfa:1+A+B+(1 G)\"]` 1.021 ms (5%)  168.47 KiB (1%)\n`[\"simplescalar\", \"AvgDailyGain:1+A*U+(1 G)\"]` 1.287 ms (5%)  193.33 KiB (1%)\n`[\"simplescalar\", \"AvgDailyGain:1+A+U+(1 G)\"]` 1.144 ms (5%)  169.59 KiB (1%)\n`[\"simplescalar\", \"BIB:1+A*U+(1 G)\"]` 1.574 ms (5%)  222.20 KiB (1%)\n`[\"simplescalar\", \"BIB:1+A+U+(1 G)\"]` 1.171 ms (5%)  171.31 KiB (1%)\n`[\"simplescalar\", \"Bond:1+A+(1 G)\"]` 958.770 μs (5%)  141.25 KiB (1%)\n`[\"simplescalar\", \"Cultivation:1+A*B+(1 G)\"]` 1.089 ms (5%)  173.38 KiB (1%)\n`[\"simplescalar\", \"Cultivation:1+A+(1 G)\"]` 1.138 ms (5%)  162.14 KiB (1%)\n`[\"simplescalar\", \"Cultivation:1+A+B+(1 G)\"]` 1.147 ms (5%)  173.47 KiB (1%)\n`[\"simplescalar\", \"Dyestuff2:1+(1 G)\"]` 830.840 μs (5%)  105.20 KiB (1%)\n`[\"simplescalar\", \"Dyestuff:1+(1 G)\"]` 974.091 μs (5%)  120.86 KiB (1%)\n`[\"simplescalar\", \"Exam:1+A*U+B+(1 G)\"]` 2.250 ms (5%)  1.17 MiB (1%)\n`[\"simplescalar\", \"Exam:1+A+B+U+(1 G)\"]` 2.133 ms (5%)  1.03 MiB (1%)\n`[\"simplescalar\", \"Gasoline:1+U+(1 G)\"]` 1.164 ms (5%)  162.03 KiB (1%)\n`[\"simplescalar\", \"Hsb82:1+A+B+C+U+(1 G)\"]` 3.048 ms (5%)  2.12 MiB (1%)\n`[\"simplescalar\", \"IncBlk:1+A+U+V+W+Z+(1 G)\"]` 1.226 ms (5%)  208.83 KiB (1%)\n`[\"simplescalar\", \"Mississippi:1+A+(1 G)\"]` 980.968 μs (5%)  145.75 KiB (1%)\n`[\"simplescalar\", \"PBIB:1+A+(1 G)\"]` 1.509 ms (5%)  234.47 KiB (1%)\n`[\"simplescalar\", \"Rail:1+(1 G)\"]` 1.251 ms (5%)  151.34 KiB (1%)\n`[\"simplescalar\", \"Semiconductor:1+A*B+(1 G)\"]` 1.313 ms (5%)  222.95 KiB (1%)\n`[\"simplescalar\", \"TeachingII:1+A+T+U+V+W+X+Z+(1 G)\"]` 1.483 ms (5%)  284.53 KiB (1%)\n`[\"simplescalar\", \"cake:1+A*B+(1 G)\"]` 1.606 ms (5%)  412.83 KiB (1%)\n`[\"simplescalar\", \"ergoStool:1+A+(1 G)\"]` 1.057 ms (5%)  155.59 KiB (1%)\n`[\"singlevector\", \"Early:1+U+U&A+((1+U) G)\"]` 20.373 ms (5%)  3.47 MiB (1%)\n`[\"singlevector\", \"HR:1+A*U+V+((1+U) G)\"]` 5.183 ms (5%)  915.00 KiB (1%)\n`[\"singlevector\", \"Oxboys:1+U+((1+U) G)\"]` 13.207 ms (5%)  1.93 MiB (1%)\n`[\"singlevector\", \"SIMS:1+U+((1+U) G)\"]` 61.675 ms (5%)  12.86 MiB (1%)\n`[\"singlevector\", \"WWheat:1+U+((1+U) G)\"]` 7.311 ms (5%)  902.31 KiB (1%)\n`[\"singlevector\", \"Weights:1+A*U+((1+U) G)\"]` 18.303 ms (5%)  3.20 MiB (1%)\n`[\"singlevector\", \"sleepstudy:1+U+((1+U) G)\"]` 4.829 ms (5%)  797.48 KiB (1%)\n`[\"singlevector\", \"sleepstudy:1+U+(1 G)+((0+U) G)\"]` 3.219 ms (5%) ","category":"page"},{"location":"benchmarks/#Benchmark-Group-List-1","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Benchmark Group List","text":"","category":"section"},{"location":"benchmarks/#","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","text":"Here's a list of all the benchmark groups executed by this job:","category":"page"},{"location":"benchmarks/#","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","text":"[\"crossed\"]\n[\"crossedvector\"]\n[\"nested\"]\n[\"simplescalar\"]\n[\"singlevector\"]","category":"page"},{"location":"benchmarks/#Julia-versioninfo-1","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Julia versioninfo","text":"","category":"section"},{"location":"benchmarks/#","page":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","title":"Benchmark Report for /home/bates/.julia/packages/MixedModels/dn0WY/src/MixedModels.jl","text":"Julia Version 1.0.0\nCommit 5d4eaca0c9 (2018-08-08 20:58 UTC)\nPlatform Info:\n  OS: Linux (x86_64-linux-gnu)\n      Ubuntu 18.04.1 LTS\n  uname: Linux 4.15.0-36-generic #39-Ubuntu SMP Mon Sep 24 16:19:09 UTC 2018 x86_64 x86_64\n  CPU: Intel(R) Core(TM) i5-3570 CPU @ 3.40GHz: \n              speed         user         nice          sys         idle          irq\n       #1  1690 MHz     140498 s        134 s      18382 s    1495130 s          0 s\n       #2  2513 MHz     131505 s         16 s      18277 s    1504212 s          0 s\n       #3  1900 MHz     145131 s        581 s      18892 s    1485409 s          0 s\n       #4  1682 MHz     190751 s         38 s      17941 s    1445446 s          0 s\n       \n  Memory: 15.554645538330078 GB (10502.1171875 MB free)\n  Uptime: 16578.0 sec\n  Load Avg:  1.4091796875  2.07080078125  1.63037109375\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-6.0.0 (ORCJIT, ivybridge)","category":"page"},{"location":"optimization/#Details-of-the-parameter-estimation-1","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"","category":"section"},{"location":"optimization/#The-probability-model-1","page":"Details of the parameter estimation","title":"The probability model","text":"","category":"section"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Maximum likelihood estimates are based on the probability model for the observed responses. In the probability model the distribution of the responses is expressed as a function of one or more parameters.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"For a continuous distribution the probability density is a function of the responses, given the parameters. The likelihood function is the same expression as the probability density but regarding the observed values as fixed and the parameters as varying.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"In general a mixed-effects model incorporates two random variables: mathcalB, the q-dimensional vector of random effects, and mathcalY, the n-dimensional response vector. The value, bf y, of mathcalY is observed; the value, bf b, of mathcalB is not.","category":"page"},{"location":"optimization/#Linear-Mixed-Effects-Models-1","page":"Details of the parameter estimation","title":"Linear Mixed-Effects Models","text":"","category":"section"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"In a linear mixed model the unconditional distribution of mathcalB and the conditional distribution, (mathcalY  mathcalB=bfb), are both multivariate Gaussian distributions,","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"beginaligned\n  (mathcalY  mathcalB=bfb) simmathcalN(bf Xbeta + Z bsigma^2bfI)\n  mathcalBsimmathcalN(bf0Sigma_theta) \nendaligned","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The conditional mean of mathcal Y, given mathcal B=bf b, is the linear predictor, bf Xbfbeta+bf Zbf b, which depends on the p-dimensional fixed-effects parameter, bf beta, and on bf b. The model matrices, bf X and bf Z, of dimension ntimes p and ntimes q, respectively, are determined from the formula for the model and the values of covariates. Although the matrix bf Z can be large (i.e. both n and q can be large), it is sparse (i.e. most of the elements in the matrix are zero).","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The relative covariance factor, Lambda_theta, is a qtimes q lower-triangular matrix, depending on the variance-component parameter, bftheta, and generating the symmetric qtimes q variance-covariance matrix, Sigma_theta, as","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Sigma_theta=sigma^2Lambda_thetaLambda_theta","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The spherical random effects, mathcalUsimmathcalN(bf0sigma^2bfI_q), determine mathcal B according to","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"mathcalB=Lambda_thetamathcalU","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The penalized residual sum of squares (PRSS),","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"r^2(thetabetabfu)=bfy - bfXbeta -bfZLambda_thetabfu^2+bfu^2","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"is the sum of the residual sum of squares, measuring fidelity of the model to the data, and a penalty on the size of bf u, measuring the complexity of the model. Minimizing r^2 with respect to bf u,","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"r^2_betatheta =min_bfuleft(bfy -bfXbeta -bfZLambda_thetabfu^2+bfu^2right)","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"is a direct (i.e. non-iterative) computation. The particular method used to solve this generates a blocked Choleksy factor, bfL_theta, which is an lower triangular qtimes q matrix satisfying","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"bfL_thetabfL_theta=Lambda_thetabfZbfZLambda_theta+bfI_q ","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"where bf I_q is the qtimes q identity matrix.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Negative twice the log-likelihood of the parameters, given the data, bf y, is","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"d(bfthetabfbetasigmabf y)\n=nlog(2pisigma^2)+log(bf L_theta^2)+fracr^2_betathetasigma^2","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"where bf L_theta denotes the determinant of bf L_theta. Because bf L_theta is triangular, its determinant is the product of its diagonal elements.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Because the conditional mean, bfmu_mathcal Ymathcal B=bf b=bf Xbfbeta+bf ZLambda_thetabf u, is a linear function of both bfbeta and bf u, minimization of the PRSS with respect to both bfbeta and bf u to produce","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"r^2_theta =min_bfbetabf uleft(bf y -bf Xbfbeta -bf ZLambda_thetabf u^2+bf u^2right)","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"is also a direct calculation. The values of bf u and bfbeta that provide this minimum are called, respectively, the conditional mode, tildebf u_theta, of the spherical random effects and the conditional estimate, widehatbfbeta_theta, of the fixed effects. At the conditional estimate of the fixed effects the objective is","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"d(bfthetawidehatbeta_thetasigmabf y)\n=nlog(2pisigma^2)+log(bf L_theta^2)+fracr^2_thetasigma^2","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Minimizing this expression with respect to sigma^2 produces the conditional estimate","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"widehatsigma^2_theta=fracr^2_thetan","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"which provides the profiled log-likelihood on the deviance scale as","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"tilded(thetabf y)=d(thetawidehatbeta_thetawidehatsigma_thetabf y)\n=log(bf L_theta^2)+nleft1+logleft(frac2pi r^2_thetanright)right","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"a function of bftheta alone.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The MLE of bftheta, written widehatbftheta, is the value that minimizes this profiled objective. We determine this value by numerical optimization. In the process of evaluating tilded(widehatthetabf y) we determine widehatbeta=widehatbeta_widehattheta, tildebf u_widehattheta and r^2_widehattheta, from which we can evaluate widehatsigma=sqrtr^2_widehatthetan.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The elements of the conditional mode of mathcal B, evaluated at the parameter estimates,","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"tildebf b_widehattheta=Lambda_widehatthetatildebf u_widehattheta","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"are sometimes called the best linear unbiased predictors or BLUPs of the random effects. Although BLUPs an appealing acronym, I don’t find the term particularly instructive (what is a “linear unbiased predictor” and in what sense are these the “best”?) and prefer the term “conditional modes”, because these are the values of bf b that maximize the density of the conditional distribution mathcalB  mathcalY = bf y. For a linear mixed model, where all the conditional and unconditional distributions are Gaussian, these values are also the conditional means.","category":"page"},{"location":"optimization/#Internal-structure-of-\\Lambda_\\theta-and-\\bf-Z-1","page":"Details of the parameter estimation","title":"Internal structure of Lambda_theta and bf Z","text":"","category":"section"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"In the types of LinearMixedModel available through the MixedModels package, groups of random effects and the corresponding columns of the model matrix, bf Z, are associated with random-effects terms in the model formula.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"For the simple example","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> dyestuff = MixedModels.dataset(:dyestuff)\n30×2 DataFrames.DataFrame\n│ Row │ batch  │ yield │\n│     │ String │ Int16 │\n├─────┼────────┼───────┤\n│ 1   │ A      │ 1545  │\n│ 2   │ A      │ 1440  │\n│ 3   │ A      │ 1440  │\n│ 4   │ A      │ 1520  │\n│ 5   │ A      │ 1580  │\n│ 6   │ B      │ 1540  │\n│ 7   │ B      │ 1555  │\n⋮\n│ 23  │ E      │ 1515  │\n│ 24  │ E      │ 1635  │\n│ 25  │ E      │ 1625  │\n│ 26  │ F      │ 1520  │\n│ 27  │ F      │ 1455  │\n│ 28  │ F      │ 1450  │\n│ 29  │ F      │ 1480  │\n│ 30  │ F      │ 1445  │\n\njulia> fm1 = fit(MixedModel, @formula(yield ~ 1 + (1|batch)), dyestuff)\nLinear mixed model fit by maximum likelihood\n yield ~ 1 + (1 | batch)\n   logLik   -2 logLik     AIC        BIC    \n -163.66353  327.32706  333.32706  337.53065\n\nVariance components:\n            Column    Variance  Std.Dev. \nbatch    (Intercept)  1388.3333 37.260345\nResidual              2451.2500 49.510100\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)    1527.5    17.6946    86.33   <1e-99\n──────────────────────────────────────────────────\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"the only random effects term in the formula is (1|batch), a simple, scalar random-effects term.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> t1 = first(fm1.reterms);\n\njulia> Int.(t1)  # convert to integers for more compact display\n30×6 Array{Int64,2}:\n 1  0  0  0  0  0\n 1  0  0  0  0  0\n 1  0  0  0  0  0\n 1  0  0  0  0  0\n 1  0  0  0  0  0\n 0  1  0  0  0  0\n 0  1  0  0  0  0\n 0  1  0  0  0  0\n 0  1  0  0  0  0\n 0  1  0  0  0  0\n ⋮              ⋮\n 0  0  0  0  1  0\n 0  0  0  0  1  0\n 0  0  0  0  1  0\n 0  0  0  0  1  0\n 0  0  0  0  0  1\n 0  0  0  0  0  1\n 0  0  0  0  0  1\n 0  0  0  0  0  1\n 0  0  0  0  0  1\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"ReMat","category":"page"},{"location":"optimization/#MixedModels.ReMat","page":"Details of the parameter estimation","title":"MixedModels.ReMat","text":"ReMat{T,S} <: AbstractMatrix{T}\n\nA section of a model matrix generated by a random-effects term.\n\nFields\n\ntrm: the grouping factor as a StatsModels.CategoricalTerm\nrefs: indices into the levels of the grouping factor as a Vector{Int32}\nz: transpose of the model matrix generated by the left-hand side of the term\nwtz: a weighted copy of z (z and wtz are the same object for unweighted cases)\nλ: a LowerTriangular matrix of size S×S\ninds: a Vector{Int} of linear indices of the potential nonzeros in λ\nadjA: the adjoint of the matrix as a SparseMatrixCSC{T}\n\n\n\n\n\n","category":"type"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"This RandomEffectsTerm contributes a block of columns to the model matrix bf Z and a diagonal block to Lambda_theta. In this case the diagonal block of Lambda_theta (which is also the only block) is a multiple of the 6times6 identity matrix where the multiple is","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> t1.λ\n1×1 LinearAlgebra.LowerTriangular{Float64,Array{Float64,2}}:\n 0.7525806757718846\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Because there is only one random-effects term in the model, the matrix bf Z is the indicators matrix shown as the result of Matrix(t1), but stored in a special sparse format. Furthermore, there is only one block in Lambda_theta.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"For a vector-valued random-effects term, as in","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> sleepstudy = MixedModels.dataset(:sleepstudy)\n180×3 DataFrames.DataFrame\n│ Row │ subj   │ days │ reaction │\n│     │ String │ Int8 │ Float64  │\n├─────┼────────┼──────┼──────────┤\n│ 1   │ S308   │ 0    │ 249.56   │\n│ 2   │ S308   │ 1    │ 258.705  │\n│ 3   │ S308   │ 2    │ 250.801  │\n│ 4   │ S308   │ 3    │ 321.44   │\n│ 5   │ S308   │ 4    │ 356.852  │\n│ 6   │ S308   │ 5    │ 414.69   │\n│ 7   │ S308   │ 6    │ 382.204  │\n⋮\n│ 173 │ S372   │ 2    │ 297.597  │\n│ 174 │ S372   │ 3    │ 310.632  │\n│ 175 │ S372   │ 4    │ 287.173  │\n│ 176 │ S372   │ 5    │ 329.608  │\n│ 177 │ S372   │ 6    │ 334.482  │\n│ 178 │ S372   │ 7    │ 343.22   │\n│ 179 │ S372   │ 8    │ 369.142  │\n│ 180 │ S372   │ 9    │ 364.124  │\n\njulia> fm2 = fit(MixedModel, @formula(reaction ~ 1+days+(1+days|subj)), sleepstudy)\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1763.93934 1783.09709\n\nVariance components:\n            Column    Variance  Std.Dev.   Corr.\nsubj     (Intercept)  565.51068 23.780469\n         days          32.68212  5.716828  0.08\nResidual              654.94145 25.591824\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.63226    37.91   <1e-99\ndays          10.4673    1.50224     6.97   <1e-11\n──────────────────────────────────────────────────\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"the model matrix bf Z is of the form","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> t21 = first(fm2.reterms);\n\njulia> Int.(t21) # convert to integers for more compact display\n180×36 Array{Int64,2}:\n 1  0  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 1  1  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  2  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  3  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  4  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  5  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 1  6  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  7  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  8  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  9  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n ⋮              ⋮              ⋮        ⋱     ⋮              ⋮              ⋮\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  2\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  3\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  4\n 0  0  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  1  5\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  6\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  7\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  8\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  9\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"and Lambda_theta is a 36times36 block diagonal matrix with 18 diagonal blocks, all of the form","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> t21.λ\n2×2 LinearAlgebra.LowerTriangular{Float64,Array{Float64,2}}:\n 0.929221    ⋅      \n 0.0181684  0.222645\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The theta vector is","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> MixedModels.getθ(t21)\n3-element Array{Float64,1}:\n 0.9292213238823973  \n 0.018168399088001212\n 0.22264486437568012 \n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Random-effects terms in the model formula that have the same grouping factor are amagamated into a single ReMat object.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> fm3 = fit!(zerocorr!(LinearMixedModel(@formula(reaction ~ 1+days+(1+days|subj)),\n    sleepstudy)))\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -876.00163 1752.00326 1762.00326 1777.96804\n\nVariance components:\n            Column    Variance  Std.Dev.   Corr.\nsubj     (Intercept)  584.258971 24.17145\n         days          33.632805  5.79938   .  \nResidual              653.115782 25.55613\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.70771    37.48   <1e-99\ndays          10.4673    1.51931     6.89   <1e-11\n──────────────────────────────────────────────────\n\njulia> t31 = first(fm3.reterms);\n\njulia> Int.(t31)\n180×36 Array{Int64,2}:\n 1  0  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 1  1  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  2  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  3  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  4  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  5  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 1  6  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  7  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  8  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  9  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n ⋮              ⋮              ⋮        ⋱     ⋮              ⋮              ⋮\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  2\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  3\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  4\n 0  0  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  1  5\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  6\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  7\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  8\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  9\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Note that we could also have achieved this by re-fitting (a copy of) fm2.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> fm3alt = fit!(zerocorr!(deepcopy(fm2)))\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1761.93934 1777.90413\n\nVariance components:\n            Column    Variance   Std.Dev.   Corr.\nsubj     (Intercept)  565.512842 23.780514\n         days          32.682086  5.716825   .  \nResidual              654.941299 25.591821\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.63227    37.91   <1e-99\ndays          10.4673    1.50223     6.97   <1e-11\n──────────────────────────────────────────────────\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"For this model the matrix bf Z is the same as that of model fm2 but the diagonal blocks of Lambda_theta are themselves diagonal.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> t31.λ\n2×2 LinearAlgebra.LowerTriangular{Float64,Array{Float64,2}}:\n 0.945818   ⋅      \n 0.0       0.226927\n\njulia> MixedModels.getθ(t31)\n2-element Array{Float64,1}:\n 0.945818066476781  \n 0.22692714872124642\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Random-effects terms with distinct grouping factors generate distinct elements of the trms member of the LinearMixedModel object. Multiple ReMat objects are sorted by decreasing numbers of random effects.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> penicillin = MixedModels.dataset(:penicillin)\n144×3 DataFrames.DataFrame\n│ Row │ plate  │ sample │ diameter │\n│     │ String │ String │ Int8     │\n├─────┼────────┼────────┼──────────┤\n│ 1   │ a      │ A      │ 27       │\n│ 2   │ a      │ B      │ 23       │\n│ 3   │ a      │ C      │ 26       │\n│ 4   │ a      │ D      │ 23       │\n│ 5   │ a      │ E      │ 23       │\n│ 6   │ a      │ F      │ 21       │\n│ 7   │ b      │ A      │ 27       │\n⋮\n│ 137 │ w      │ E      │ 24       │\n│ 138 │ w      │ F      │ 19       │\n│ 139 │ x      │ A      │ 24       │\n│ 140 │ x      │ B      │ 21       │\n│ 141 │ x      │ C      │ 24       │\n│ 142 │ x      │ D      │ 22       │\n│ 143 │ x      │ E      │ 21       │\n│ 144 │ x      │ F      │ 18       │\n\njulia> fm4 = fit(MixedModel,\n    @formula(diameter ~ 1 + (1|plate) + (1|sample)),\n    penicillin)\nLinear mixed model fit by maximum likelihood\n diameter ~ 1 + (1 | plate) + (1 | sample)\n   logLik   -2 logLik     AIC        BIC    \n -166.09417  332.18835  340.18835  352.06760\n\nVariance components:\n            Column    Variance   Std.Dev. \nplate    (Intercept)  0.71497945 0.8455646\nsample   (Intercept)  3.13519425 1.7706480\nResidual              0.30242640 0.5499331\n Number of obs: 144; levels of grouping factors: 24, 6\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)   22.9722   0.744596    30.85   <1e-99\n──────────────────────────────────────────────────\n\njulia> Int.(first(fm4.reterms))\n144×24 Array{Int64,2}:\n 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n ⋮              ⋮              ⋮              ⋮              ⋮         \n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1\n\njulia> Int.(last(fm4.reterms))\n144×6 Array{Int64,2}:\n 1  0  0  0  0  0\n 0  1  0  0  0  0\n 0  0  1  0  0  0\n 0  0  0  1  0  0\n 0  0  0  0  1  0\n 0  0  0  0  0  1\n 1  0  0  0  0  0\n 0  1  0  0  0  0\n 0  0  1  0  0  0\n 0  0  0  1  0  0\n ⋮              ⋮\n 0  0  0  1  0  0\n 0  0  0  0  1  0\n 0  0  0  0  0  1\n 1  0  0  0  0  0\n 0  1  0  0  0  0\n 0  0  1  0  0  0\n 0  0  0  1  0  0\n 0  0  0  0  1  0\n 0  0  0  0  0  1\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Note that the first ReMat in fm4.terms corresponds to grouping factor G even though the term (1|G) occurs in the formula after (1|H).","category":"page"},{"location":"optimization/#Progress-of-the-optimization-1","page":"Details of the parameter estimation","title":"Progress of the optimization","text":"","category":"section"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"An optional named argument, verbose=true, in the call to fit for a LinearMixedModel causes printing of the objective and the theta parameter at each evaluation during the optimization.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> fit(MixedModel,\n    @formula(yield ~ 1 + (1|batch)),\n    dyestuff,\n    verbose=true);\nf_1: 327.76702 [1.0]\nf_2: 331.03619 [1.75]\nf_3: 330.64583 [0.25]\nf_4: 327.69511 [0.9761896354666064]\nf_5: 327.56631 [0.9285689063998191]\nf_6: 327.3826 [0.8333274482662446]\nf_7: 327.35315 [0.8071883308443906]\nf_8: 327.34663 [0.7996883308443905]\nf_9: 327.341 [0.7921883308443906]\nf_10: 327.33253 [0.7771883308443905]\nf_11: 327.32733 [0.7471883308443905]\nf_12: 327.32862 [0.7396883308443906]\nf_13: 327.32706 [0.7527765100479509]\nf_14: 327.32707 [0.7535265100479508]\nf_15: 327.32706 [0.7525837539403791]\nf_16: 327.32706 [0.7525087539403791]\nf_17: 327.32706 [0.7525912539403792]\nf_18: 327.32706 [0.7525806757718846]\n\njulia> fit(MixedModel,\n    @formula(reaction ~ 1 + days + (1+days|subj)),\n    sleepstudy,\n    verbose=true);\nf_1: 1784.6423 [1.0, 0.0, 1.0]\nf_2: 1790.12564 [1.75, 0.0, 1.0]\nf_3: 1798.99962 [1.0, 1.0, 1.0]\nf_4: 1803.8532 [1.0, 0.0, 1.75]\nf_5: 1800.61398 [0.25, 0.0, 1.0]\nf_6: 1798.60463 [1.0, -1.0, 1.0]\nf_7: 1752.26074 [1.0, 0.0, 0.25]\nf_8: 1797.58769 [1.1832612965367522, -0.008661887957963445, 0.0]\nf_9: 1754.95411 [1.075, 0.0, 0.32499999999999996]\nf_10: 1753.69568 [0.8166315695342754, 0.01116725445691172, 0.28823768689692686]\nf_11: 1754.817 [1.0, -0.07071067811865475, 0.19696699141100893]\nf_12: 1753.10673 [0.9436827046397082, 0.06383542916431532, 0.26269630296458246]\nf_13: 1752.93938 [0.9801419885634294, -0.026656844944242912, 0.27474275609538057]\nf_14: 1752.25688 [0.9843428851817972, -0.013234749183472554, 0.24719098754487245]\nf_15: 1752.05745 [0.9731403970871993, 0.0025378492297931723, 0.23791031400556598]\nf_16: 1752.02239 [0.9545259030380779, 0.0038642106174747192, 0.23589201227597048]\nf_17: 1752.02273 [0.9359285300960238, 0.0013317973252317912, 0.23444534669778083]\nf_18: 1751.97169 [0.9549646039745407, 0.00790664248316571, 0.22904616789180773]\nf_19: 1751.9526 [0.9533132639133618, 0.016627370638374613, 0.22576831302901973]\nf_20: 1751.94852 [0.9469287318329175, 0.013076079968896705, 0.2228711267534202]\nf_21: 1751.98718 [0.9334175303159152, 0.006137673807764107, 0.21895094167679682]\nf_22: 1751.98321 [0.9515444328078329, 0.005788999136907504, 0.22061819881550318]\nf_23: 1751.95197 [0.9528093408783747, 0.019033192067265246, 0.2241776090317882]\nf_24: 1751.94628 [0.9463215304146443, 0.015373858743888129, 0.22508817725554886]\nf_25: 1751.9467 [0.9471235457936569, 0.014889405831518926, 0.2248923477396395]\nf_26: 1751.94757 [0.9464970169219107, 0.015464270390126697, 0.22581419823408094]\nf_27: 1751.94531 [0.9460858412916352, 0.015793369920850595, 0.22444946255259282]\nf_28: 1751.94418 [0.9453036925450446, 0.016690245692505455, 0.22336052907025575]\nf_29: 1751.94353 [0.9440720727046517, 0.017210606426826435, 0.22271587718150054]\nf_30: 1751.94244 [0.9412710977030493, 0.01630994633071143, 0.22252263170344286]\nf_31: 1751.94217 [0.9390004002869106, 0.015899017065370346, 0.222131976946372]\nf_32: 1751.94237 [0.9389790833803197, 0.016547964762318432, 0.2215617504885323]\nf_33: 1751.94228 [0.938862818953401, 0.015246587961002082, 0.22268346178301046]\nf_34: 1751.9422 [0.9382687962294433, 0.015732967024600662, 0.22202359841263414]\nf_35: 1751.94131 [0.9388391785491706, 0.016637330597083028, 0.2226114401214759]\nf_36: 1751.94093 [0.9383965534721752, 0.01739653520554578, 0.22281726224155726]\nf_37: 1751.94057 [0.9370059169105476, 0.01804448872830839, 0.2225344763965165]\nf_38: 1751.94018 [0.9341094753480741, 0.018735420237090173, 0.22194958627572592]\nf_39: 1751.94008 [0.9326416012346034, 0.018924172940390394, 0.22172575640995892]\nf_40: 1751.94027 [0.9313571538969319, 0.019008176238413707, 0.22130945884044123]\nf_41: 1751.9415 [0.9328207195517433, 0.020645417460674914, 0.22136730759659157]\nf_42: 1751.93949 [0.931867483429435, 0.017957376299442794, 0.22256364256481267]\nf_43: 1751.93939 [0.9291674452199865, 0.01778242169437659, 0.22253384648762076]\nf_44: 1751.9394 [0.9296587607348034, 0.017772086223997605, 0.22250844015426333]\nf_45: 1751.93943 [0.9291934578164848, 0.018780629224672163, 0.22257042607151467]\nf_46: 1751.93935 [0.9289855868823702, 0.01823660315354116, 0.22248439976183174]\nf_47: 1751.93949 [0.9286970922171983, 0.01829369871579516, 0.22317536801913518]\nf_48: 1751.93936 [0.9282426017326223, 0.018269524695975977, 0.2225837144839457]\nf_49: 1751.93934 [0.929112736142292, 0.01817912528230166, 0.2226238886269671]\nf_50: 1751.93934 [0.9291905819450385, 0.018165752406344854, 0.22264320493118056]\nf_51: 1751.93935 [0.9292542879999808, 0.018209268574409104, 0.2226208139381923]\nf_52: 1751.93935 [0.9291892156985542, 0.018129784953348823, 0.2225732374320946]\nf_53: 1751.93934 [0.9292536020579557, 0.018167625419705388, 0.22264990633508935]\nf_54: 1751.93934 [0.9292145090654311, 0.018171739835744945, 0.22264674332079784]\nf_55: 1751.93934 [0.9292083907701464, 0.018171479749592906, 0.22264619531962188]\nf_56: 1751.93934 [0.9292093025431701, 0.018172967050564252, 0.22265206262238035]\nf_57: 1751.93934 [0.9292213238823973, 0.018168399088001212, 0.22264486437568012]\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"A shorter summary of the optimization process is always available as an","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"OptSummary","category":"page"},{"location":"optimization/#MixedModels.OptSummary","page":"Details of the parameter estimation","title":"MixedModels.OptSummary","text":"OptSummary\n\nSummary of an NLopt optimization\n\nFields\n\ninitial: a copy of the initial parameter values in the optimization\nlowerbd: lower bounds on the parameter values\nftol_rel: as in NLopt\nftol_abs: as in NLopt\nxtol_rel: as in NLopt\nxtol_abs: as in NLopt\ninitial_step: as in NLopt\nmaxfeval: as in NLopt\nfinal: a copy of the final parameter values from the optimization\nfmin: the final value of the objective\nfeval: the number of function evaluations\noptimizer: the name of the optimizer used, as a Symbol\nreturnvalue: the return value, as a Symbol\nnAGQ: number of adaptive Gauss-Hermite quadrature points in deviance evaluation for GLMMs\nREML: use the REML criterion for LMM fits\n\nThe latter field doesn't really belong here but it has to be in a mutable struct in case it is changed.\n\n\n\n\n\n","category":"type"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"object, which is the optsum member of the LinearMixedModel.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> fm2.optsum\nInitial parameter vector: [1.0, 0.0, 1.0]\nInitial objective value:  1784.6422961924677\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [0.0, -Inf, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 1.0, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     57\nFinal parameter vector:   [0.9292213238823973, 0.018168399088001212, 0.22264486437568012]\nFinal objective value:    1751.9393444647196\nReturn code:              FTOL_REACHED\n\n","category":"page"},{"location":"optimization/#Modifying-the-optimization-process-1","page":"Details of the parameter estimation","title":"Modifying the optimization process","text":"","category":"section"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The OptSummary object contains both input and output fields for the optimizer. To modify the optimization process the input fields can be changed after constructing the model but before fitting it.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Suppose, for example, that the user wishes to try a Nelder-Mead optimization method instead of the default BOBYQA (Bounded Optimization BY Quadratic Approximation) method.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> fm2 = LinearMixedModel(@formula(reaction ~ 1+days+(1+days|subj)), sleepstudy);\n\njulia> fm2.optsum.optimizer = :LN_NELDERMEAD;\n\njulia> fit!(fm2)\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1763.93934 1783.09709\n\nVariance components:\n            Column    Variance   Std.Dev.   Corr.\nsubj     (Intercept)  565.528831 23.780850\n         days          32.681047  5.716734  0.08\nResidual              654.941678 25.591828\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.63233    37.91   <1e-99\ndays          10.4673    1.50222     6.97   <1e-11\n──────────────────────────────────────────────────\n\njulia> fm2.optsum\nInitial parameter vector: [1.0, 0.0, 1.0]\nInitial objective value:  1784.6422961924677\n\nOptimizer (from NLopt):   LN_NELDERMEAD\nLower bounds:             [0.0, -Inf, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 1.0, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     140\nFinal parameter vector:   [0.9292360739538559, 0.018168794976407835, 0.22264111430139058]\nFinal objective value:    1751.9393444750297\nReturn code:              FTOL_REACHED\n\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The parameter estimates are quite similar to those using :LN_BOBYQA but at the expense of 140 functions evaluations for :LN_NELDERMEAD versus 57 for :LN_BOBYQA.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"See the documentation for the NLopt package for details about the various settings.","category":"page"},{"location":"optimization/#Convergence-to-singular-covariance-matrices-1","page":"Details of the parameter estimation","title":"Convergence to singular covariance matrices","text":"","category":"section"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"To ensure identifiability of Sigma_theta=sigma^2Lambda_theta Lambda_theta, the elements of theta corresponding to diagonal elements of Lambda_theta are constrained to be non-negative. For example, in a trivial case of a single, simple, scalar, random-effects term as in fm1, the one-dimensional theta vector is the ratio of the standard deviation of the random effects to the standard deviation of the response. It happens that -theta produces the same log-likelihood but, by convention, we define the standard deviation to be the positive square root of the variance. Requiring the diagonal elements of Lambda_theta to be non-negative is a generalization of using this positive square root.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"If the optimization converges on the boundary of the feasible region, that is if one or more of the diagonal elements of Lambda_theta is zero at convergence, the covariance matrix Sigma_theta will be singular. This means that there will be linear combinations of random effects that are constant. Usually convergence to a singular covariance matrix is a sign of an over-specified model.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Singularity can be checked with the issingular predicate function.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"issingular","category":"page"},{"location":"optimization/#MixedModels.issingular","page":"Details of the parameter estimation","title":"MixedModels.issingular","text":"issingular(m::LinearMixedModel, θ=m.θ)\n\nTest whether the model m is singular if the parameter vector is θ.\n\n\n\n\n\n","category":"function"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> issingular(fm2)\nfalse\n","category":"page"},{"location":"optimization/#Generalized-Linear-Mixed-Effects-Models-1","page":"Details of the parameter estimation","title":"Generalized Linear Mixed-Effects Models","text":"","category":"section"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"In a generalized linear model the responses are modelled as coming from a particular distribution, such as Bernoulli for binary responses or Poisson for responses that represent counts. The scalar distributions of individual responses differ only in their means, which are determined by a linear predictor expression eta=bf Xbeta, where, as before, bf X is a model matrix derived from the values of covariates and beta is a vector of coefficients.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The unconstrained components of eta are mapped to the, possiby constrained, components of the mean response, mu, via a scalar function, g^-1, applied to each component of eta. For historical reasons, the inverse of this function, taking components of mu to the corresponding component of eta is called the link function and more frequently used map from eta to mu is the inverse link.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"A generalized linear mixed-effects model (GLMM) is defined, for the purposes of this package, by","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"beginaligned\n  (mathcalY  mathcalB=bfb) simmathcalD(bfg^-1(Xbeta + Z b)phi)\n  mathcalBsimmathcalN(bf0Sigma_theta) \nendaligned","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"where mathcalD indicates the distribution family parameterized by the mean and, when needed, a common scale parameter, phi. (There is no scale parameter for Bernoulli or for Poisson. Specifying the mean completely determines the distribution.)","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"Bernoulli\nPoisson","category":"page"},{"location":"optimization/#Distributions.Bernoulli","page":"Details of the parameter estimation","title":"Distributions.Bernoulli","text":"Bernoulli(p)\n\nA Bernoulli distribution is parameterized by a success rate p, which takes value 1 with probability p and 0 with probability 1-p.\n\nP(X = k) = begincases\n1 - p  quad textfor  k = 0 \np  quad textfor  k = 1\nendcases\n\nBernoulli()    # Bernoulli distribution with p = 0.5\nBernoulli(p)   # Bernoulli distribution with success rate p\n\nparams(d)      # Get the parameters, i.e. (p,)\nsuccprob(d)    # Get the success rate, i.e. p\nfailprob(d)    # Get the failure rate, i.e. 1 - p\n\nExternal links:\n\nBernoulli distribution on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"optimization/#Distributions.Poisson","page":"Details of the parameter estimation","title":"Distributions.Poisson","text":"Poisson(λ)\n\nA Poisson distribution descibes the number of independent events occurring within a unit time interval, given the average rate of occurrence λ.\n\nP(X = k) = fraclambda^kk e^-lambda quad text for  k = 012ldots\n\nPoisson()        # Poisson distribution with rate parameter 1\nPoisson(lambda)       # Poisson distribution with rate parameter lambda\n\nparams(d)        # Get the parameters, i.e. (λ,)\nmean(d)          # Get the mean arrival rate, i.e. λ\n\nExternal links:\n\nPoisson distribution on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"A GeneralizedLinearMixedModel object is generated from a formula, data frame and distribution family.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> verbagg = MixedModels.dataset(:verbagg)\n7584×9 DataFrames.DataFrame. Omitted printing of 2 columns\n│ Row  │ subj   │ item        │ anger │ gender │ btype  │ situ   │ mode   │\n│      │ String │ String      │ Int8  │ String │ String │ String │ String │\n├──────┼────────┼─────────────┼───────┼────────┼────────┼────────┼────────┤\n│ 1    │ S001   │ S1WantCurse │ 20    │ M      │ curse  │ other  │ want   │\n│ 2    │ S002   │ S1WantCurse │ 11    │ M      │ curse  │ other  │ want   │\n│ 3    │ S003   │ S1WantCurse │ 17    │ F      │ curse  │ other  │ want   │\n│ 4    │ S004   │ S1WantCurse │ 21    │ F      │ curse  │ other  │ want   │\n│ 5    │ S005   │ S1WantCurse │ 17    │ F      │ curse  │ other  │ want   │\n│ 6    │ S006   │ S1WantCurse │ 21    │ F      │ curse  │ other  │ want   │\n│ 7    │ S007   │ S1WantCurse │ 39    │ F      │ curse  │ other  │ want   │\n⋮\n│ 7577 │ S309   │ S4DoShout   │ 14    │ F      │ shout  │ self   │ do     │\n│ 7578 │ S310   │ S4DoShout   │ 23    │ F      │ shout  │ self   │ do     │\n│ 7579 │ S311   │ S4DoShout   │ 24    │ M      │ shout  │ self   │ do     │\n│ 7580 │ S312   │ S4DoShout   │ 17    │ M      │ shout  │ self   │ do     │\n│ 7581 │ S313   │ S4DoShout   │ 20    │ F      │ shout  │ self   │ do     │\n│ 7582 │ S314   │ S4DoShout   │ 25    │ F      │ shout  │ self   │ do     │\n│ 7583 │ S315   │ S4DoShout   │ 23    │ F      │ shout  │ self   │ do     │\n│ 7584 │ S316   │ S4DoShout   │ 12    │ F      │ shout  │ self   │ do     │\n\njulia> const vaform = @formula(r2 ~ 1 + anger + gender + btype + situ + (1|subj) + (1|item));\n\njulia> mdl = GeneralizedLinearMixedModel(vaform, verbagg, Bernoulli());\n\njulia> typeof(mdl)\nGeneralizedLinearMixedModel{Float64}\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"A separate call to fit! can be used to fit the model. This involves optimizing an objective function, the Laplace approximation to the deviance, with respect to the parameters, which are beta, the fixed-effects coefficients, and theta, the covariance parameters. The starting estimate for beta is determined by fitting a GLM to the fixed-effects part of the formula","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> mdl.β\n6-element Array{Float64,1}:\n  0.20605302210322748 \n  0.039940376051149876\n  0.23131667674984463 \n -0.7941857249205364  \n -1.539188208545692   \n -0.7766556048305915  \n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"and the starting estimate for theta, which is a vector of the two standard deviations of the random effects, is chosen to be","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> mdl.θ\n2-element Array{Float64,1}:\n 1.0\n 1.0\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The Laplace approximation to the deviance requires determining the conditional modes of the random effects. These are the values that maximize the conditional density of the random effects, given the model parameters and the data. This is done using Penalized Iteratively Reweighted Least Squares (PIRLS). In most cases PIRLS is fast and stable. It is simply a penalized version of the IRLS algorithm used in fitting GLMs.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The distinction between the \"fast\" and \"slow\" algorithms in the MixedModels package (nAGQ=0 or nAGQ=1 in lme4) is whether the fixed-effects parameters, beta, are optimized in PIRLS or in the nonlinear optimizer. In a call to the pirls! function the first argument is a GeneralizedLinearMixedModel, which is modified during the function call. (By convention, the names of such mutating functions end in ! as a warning to the user that they can modify an argument, usually the first argument.) The second and third arguments are optional logical values indicating if beta is to be varied and if verbose output is to be printed.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> pirls!(mdl, true, true)\nvaryβ = true, obj₀ = 10210.853438905406, β = [0.20605302210322748, 0.039940376051149876, 0.23131667674984463, -0.7941857249205364, -1.539188208545692, -0.7766556048305915]\n   1: 8301.483049027265\n   2: 8205.604285133919\n   3: 8201.89659746689\n   4: 8201.848598910705\n   5: 8201.848559060705\n   6: 8201.848559060621\n\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> deviance(mdl)\n8201.848559060621\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> mdl.β\n6-element Array{Float64,1}:\n  0.21853493716516456\n  0.05143854258081136\n  0.2902245416630128 \n -0.9791237061899594 \n -1.9540167628139584 \n -0.9794925718037184 \n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> mdl.θ # current values of the standard deviations of the random effects\n2-element Array{Float64,1}:\n 1.0\n 1.0\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"If the optimization with respect to beta is performed within PIRLS then the nonlinear optimization of the Laplace approximation to the deviance requires optimization with respect to theta only. This is the \"fast\" algorithm. Given a value of theta, PIRLS is used to determine the conditional estimate of beta and the conditional mode of the random effects, b.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> mdl.b # conditional modes of b\n2-element Array{Array{Float64,2},1}:\n [-0.6007716038488811 -1.9322680866219628 … -0.14455373975335703 -0.5752238433557011]\n [-0.1863641874790072 0.021422773585936136 … 0.6410383402097959 0.6496779078973146]  \n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> fit!(mdl, fast=true, verbose=true);\nvaryβ = true, obj₀ = 10251.003116042944, β = [0.21853493716516456, 0.05143854258081136, 0.2902245416630128, -0.9791237061899594, -1.9540167628139584, -0.9794925718037184]\n   1: 8292.390783437771\n   2: 8204.692089323944\n   3: 8201.87681054392\n   4: 8201.848569551963\n   5: 8201.848559060627\n   6: 8201.848559060621\nf_1: 8201.848559060621 [1.0, 1.0]\nvaryβ = true, obj₀ = 10565.660003719015, β = [0.2185349371650122, 0.05143854258081871, 0.2902245416630129, -0.9791237061900514, -1.954016762814042, -0.9794925718036336]\n   1: 8356.488185490085\n   2: 8200.93270879382\n   3: 8190.472561852921\n   4: 8190.119918353261\n   5: 8190.117817016412\n   6: 8190.117816802471\nf_2: 8190.117816802471 [1.75, 1.0]\nvaryβ = true, obj₀ = 10317.246304689335, β = [0.193420587351331, 0.05738776368387292, 0.31799603952605654, -1.0485464263733457, -2.0960319812114325, -1.051128801683704]\n   1: 8322.599130522533\n   2: 8227.32605948889\n   3: 8224.479329416503\n   4: 8224.450989053388\n   5: 8224.450978980774\n   6: 8224.45097898077\nf_3: 8224.45097898077 [1.0, 1.75]\nvaryβ = true, obj₀ = 9776.196238005325, β = [0.21876438895192785, 0.05148884100230967, 0.29046070478860453, -0.9797643406723213, -1.9572962794109496, -0.9812079030634242]\n   1: 9035.725240344309\n   2: 9026.060558389583\n   3: 9026.003998095694\n   4: 9026.003906404212\n   5: 9026.003906403306\nf_4: 9026.003906403306 [0.25, 1.0]\nvaryβ = true, obj₀ = 10149.608772216947, β = [0.19893695106098339, 0.04180670725991061, 0.24189864813053638, -0.8153959340434729, -1.6334718386669707, -0.8201772064234891]\n   1: 8286.346044727728\n   2: 8208.252412394584\n   3: 8205.812828017322\n   4: 8205.793778239711\n   5: 8205.793775487933\nf_5: 8205.793775487933 [1.0, 0.25]\nvaryβ = true, obj₀ = 10406.590456413769, β = [0.21728094120287472, 0.05073109226840579, 0.28679620590416827, -0.9699881548970221, -1.9127335969466084, -0.959182389479004]\n   1: 8290.678720764578\n   2: 8163.613865769224\n   3: 8157.16743328995\n   4: 8157.041222813376\n   5: 8157.041032394058\n   6: 8157.041032392805\nf_6: 8157.041032392805 [1.3858293823679781, 0.7364567143287959]\nvaryβ = true, obj₀ = 10334.28560906147, β = [0.20721523412593235, 0.05490998576682092, 0.30652969414239317, -1.022780670066828, -2.040115543154571, -1.0227350541867712]\n   1: 8461.553656168611\n   2: 8371.201859251129\n   3: 8367.771392346047\n   4: 8367.724263488171\n   5: 8367.724223100673\n   6: 8367.724223100575\nf_7: 8367.724223100575 [1.3371524465545712, 0.0]\nvaryβ = true, obj₀ = 10441.99288890889, β = [0.21310775427579984, 0.05262369623725068, 0.2959485161926351, -0.9987562912090376, -1.933937463915696, -0.973535338019592]\n   1: 8308.813446103564\n   2: 8177.318105403589\n   3: 8170.433438731546\n   4: 8170.289084465012\n   5: 8170.288828193686\n   6: 8170.28882819152\nf_8: 8170.28882819152 [1.4136494266702293, 1.1104233507216976]\nvaryβ = true, obj₀ = 10394.123754834078, β = [0.20658453714127423, 0.0552133731832723, 0.3079133180419622, -1.0262965361212382, -2.0504566216498024, -1.0280362485644596]\n   1: 8283.540345224603\n   2: 8163.918696581624\n   3: 8158.905795827854\n   4: 8158.829375849116\n   5: 8158.829317592089\n   6: 8158.829317591996\nf_9: 8158.829317591996 [1.2722464441311803, 0.7628110428959164]\nvaryβ = true, obj₀ = 10449.122512319118, β = [0.21122282489398722, 0.05400548405721326, 0.30230959849208233, -1.012299568744952, -2.0190655839379748, -1.0121221456081502]\n   1: 8299.982309744815\n   2: 8168.539378419906\n   3: 8162.061112545691\n   4: 8161.933600781367\n   5: 8161.933408558587\n   6: 8161.933408557297\nf_10: 8161.933408557297 [1.4093623667537467, 0.8680844411698708]\nvaryβ = true, obj₀ = 10414.107933396312, β = [0.20653729580009558, 0.05513368643868377, 0.30755767449650495, -1.0253459434061065, -2.0468884488247587, -1.026189553447334]\n   1: 8286.13831666331\n   2: 8161.902045658137\n   3: 8156.39292594619\n   4: 8156.301068837268\n   5: 8156.3009800186865\n   6: 8156.300980018444\nf_11: 8156.300980018444 [1.3269393938015477, 0.7210153433277118]\nvaryβ = true, obj₀ = 10407.145905747264, β = [0.2092936301084143, 0.05444078616024455, 0.3043450395272343, -1.017410038992204, -2.0289135444050923, -1.017076254901679]\n   1: 8284.877807447845\n   2: 8161.708700091352\n   3: 8156.20852356967\n   4: 8156.116764659554\n   5: 8156.116675394207\n   6: 8156.116675393962\nf_12: 8156.116675393962 [1.323649391663659, 0.7142754704852401]\nvaryβ = true, obj₀ = 10404.356312407224, β = [0.2093966506704068, 0.05441123183582412, 0.30420785069726425, -1.0170635346400367, -2.028105926151978, -1.016666961042806]\n   1: 8284.155879798216\n   2: 8161.539014566784\n   3: 8156.092168783244\n   4: 8156.002155450721\n   5: 8156.002070048331\n   6: 8156.002070048108\nf_13: 8156.002070048108 [1.3184653242985764, 0.7088555585344528]\nvaryβ = true, obj₀ = 10404.53296455962, β = [0.20956728950797043, 0.05436677355362948, 0.30400097123018865, -1.0165433887574622, -2.0269623799216747, -1.0160886153662525]\n   1: 8284.027704597474\n   2: 8161.308933576594\n   3: 8155.844273740122\n   4: 8155.753676771538\n   5: 8155.753590029703\n   6: 8155.753590029471\nf_14: 8155.753590029471 [1.320716938857125, 0.7017015224792088]\nvaryβ = true, obj₀ = 10406.080590126865, β = [0.20947609033470668, 0.054381708709045844, 0.30407138125848776, -1.0167138677795922, -2.0271985835155646, -1.0162057468818588]\n   1: 8283.987555395457\n   2: 8160.874305438911\n   3: 8155.367283709277\n   4: 8155.275310500366\n   5: 8155.275220625106\n   6: 8155.275220624853\nf_15: 8155.275220624853 [1.3263558167617484, 0.6878017722664622]\nvaryβ = true, obj₀ = 10409.588006838827, β = [0.20925331974756306, 0.05442052407950844, 0.3042539578337623, -1.017157811376714, -2.0278787178031767, -1.016544913381582]\n   1: 8284.07087504108\n   2: 8160.104155117678\n   3: 8154.505123130811\n   4: 8154.410093357725\n   5: 8154.4099961590755\n   6: 8154.409996158768\nf_16: 8154.409996158768 [1.3385857165559656, 0.6604078030209621]\nvaryβ = true, obj₀ = 10422.176224405805, β = [0.20876798544822775, 0.054504010629243094, 0.30464664470266795, -1.0181072531046664, -2.0293349027599, -1.0172718754793673]\n   1: 8286.14893056937\n   2: 8159.408927883488\n   3: 8153.50100477619\n   4: 8153.395082917572\n   5: 8153.394956151762\n   6: 8153.394956151182\nf_17: 8153.394956151182 [1.3758192930036834, 0.6133582463289808]\nvaryβ = true, obj₀ = 10427.671854015935, β = [0.20732305195122236, 0.05476609730563587, 0.3058757219213609, -1.021062848044387, -2.0344083911048347, -1.019819941218364]\n   1: 8286.691066751966\n   2: 8158.86955655105\n   3: 8152.851268971587\n   4: 8152.741083892389\n   5: 8152.740942646411\n   6: 8152.74094264564\nf_18: 8152.74094264564 [1.395150899360877, 0.5630963988303244]\nvaryβ = true, obj₀ = 10412.134716835524, β = [0.2064753179535223, 0.0548743832097538, 0.30638967606907763, -1.0222230837236579, -2.035530371922711, -1.0203755723552477]\n   1: 8282.017684913284\n   2: 8157.522016815873\n   3: 8151.862297991567\n   4: 8151.764833400504\n   5: 8151.764726543848\n   6: 8151.764726543412\nf_19: 8151.764726543412 [1.3676323395322791, 0.5091235621211307]\nvaryβ = true, obj₀ = 10364.111639274717, β = [0.20730625718468784, 0.05461186270261239, 0.30517481958643167, -1.0191804210360513, -2.0276807789667903, -1.0164075726140147]\n   1: 8271.970907129926\n   2: 8157.55555775327\n   3: 8152.875645706794\n   4: 8152.808979106626\n   5: 8152.808935981371\n   6: 8152.808935981312\nf_20: 8152.808935981312 [1.2677640577723635, 0.47512314631845676]\nvaryβ = true, obj₀ = 10420.04918502711, β = [0.2106775805667401, 0.05376804338834322, 0.3012295551223543, -1.0092843628508967, -2.006396181496647, -1.005678743638404]\n   1: 8285.75225336104\n   2: 8159.073978096158\n   3: 8152.980811897899\n   4: 8152.8665773069415\n   5: 8152.8664150019495\n   6: 8152.866415000816\nf_21: 8152.866415000816 [1.4147967067161125, 0.4710990870343405]\nvaryβ = true, obj₀ = 10395.489389328499, β = [0.20541659536892584, 0.05492082437718557, 0.30662779729828926, -1.0225711061467748, -2.0331407851432215, -1.0191682418229173]\n   1: 8278.256525896244\n   2: 8157.1546726389915\n   3: 8151.854900401958\n   4: 8151.769667985616\n   5: 8151.769591419707\n   6: 8151.769591419504\nf_22: 8151.769591419504 [1.3258860654164732, 0.5275226916672942]\nvaryβ = true, obj₀ = 10406.847022583572, β = [0.20886367217928128, 0.0543031785424332, 0.3037280282635405, -1.0156611090060534, -2.0211403904584073, -1.0131090903120958]\n   1: 8281.19520217958\n   2: 8157.492470480421\n   3: 8151.835428349385\n   4: 8151.737863139839\n   5: 8151.737755041621\n   6: 8151.737755041168\nf_23: 8151.737755041168 [1.3668062704800998, 0.4986062131355091]\nvaryβ = true, obj₀ = 10396.623183200287, β = [0.2072982541958861, 0.05459363004474792, 0.3050918349452312, -1.0189553661917297, -2.0268543124626426, -1.0159907029314292]\n   1: 8278.460002110576\n   2: 8157.05332393766\n   3: 8151.673309975076\n   4: 8151.585246119001\n   5: 8151.585161942598\n   6: 8151.585161942338\nf_24: 8151.585161942338 [1.3397371137806189, 0.4934921982211279]\nvaryβ = true, obj₀ = 10393.609316251614, β = [0.20825496597645685, 0.054376602982546166, 0.3040778501929814, -1.016462598792412, -2.0216118170023134, -1.0133460788423416]\n   1: 8277.918179767978\n   2: 8157.043669989391\n   3: 8151.689440593426\n   4: 8151.602147764972\n   5: 8151.602064961408\n   6: 8151.602064961155\nf_25: 8151.602064961155 [1.3375752795410298, 0.48631052204348374]\nvaryβ = true, obj₀ = 10397.764486561106, β = [0.20830542908593824, 0.054350965531124264, 0.3039593106175127, -1.0161551809708145, -2.0207219752080294, -1.0128978657453545]\n   1: 8278.935236560126\n   2: 8157.1452308191\n   3: 8151.691194952197\n   4: 8151.600591190689\n   5: 8151.600500691274\n   6: 8151.600500690965\nf_26: 8151.600500690965 [1.3469240905715114, 0.49134805162931744]\nvaryβ = true, obj₀ = 10395.774178198204, β = [0.2079898825144615, 0.054430597969304946, 0.30433091270636803, -1.017080341971835, -2.0227854258226756, -1.0139382184732906]\n   1: 8278.406326249316\n   2: 8157.064425497867\n   3: 8151.671951343675\n   4: 8151.583465843252\n   5: 8151.583380717897\n   6: 8151.583380717631\nf_27: 8151.583380717631 [1.3395817610366942, 0.4973372768677059]\nvaryβ = true, obj₀ = 10395.443943189708, β = [0.20827453095430626, 0.054379842471567345, 0.3040922464550034, -1.0165060438642397, -2.0218392967294077, -1.0134606162647075]\n   1: 8278.362655736963\n   2: 8157.064544983578\n   3: 8151.672160260854\n   4: 8151.58367501763\n   5: 8151.583589892587\n   6: 8151.5835898923215\nf_28: 8151.5835898923215 [1.3392718767167426, 0.49802026420891227]\nvaryβ = true, obj₀ = 10395.535382999728, β = [0.20828805461944533, 0.054378180211740394, 0.3040843349543691, -1.0164879468260724, -2.021827115712866, -1.0134544452465744]\n   1: 8278.380710340956\n   2: 8157.066651045131\n   3: 8151.671999799075\n   4: 8151.58343280049\n   5: 8151.583347442415\n   6: 8151.583347442146\nf_29: 8151.583347442146 [1.3397210818326308, 0.4969553853429551]\nvaryβ = true, obj₀ = 10395.855932031242, β = [0.2082681763394181, 0.0543805024243515, 0.3040954094451232, -1.0165130522338501, -2.021839767590585, -1.0134608700296037]\n   1: 8278.456305937356\n   2: 8157.074106468341\n   3: 8151.672400464069\n   4: 8151.583600201323\n   5: 8151.583514305466\n   6: 8151.583514305195\nf_30: 8151.583514305195 [1.3404085881860572, 0.49725511024015007]\nvaryβ = true, obj₀ = 10395.450813219028, β = [0.2082447332800359, 0.05438627252764157, 0.3041223466790911, -1.0165800287331164, -2.0219863550428467, -1.0135347946044646]\n   1: 8278.35336160107\n   2: 8157.063550036686\n   3: 8151.67195413513\n   4: 8151.583485621319\n   5: 8151.583400470982\n   6: 8151.583400470716\nf_31: 8151.583400470716 [1.33957287723201, 0.49622017421929415]\nvaryβ = true, obj₀ = 10395.72665354137, β = [0.20827079143716004, 0.054378483644552535, 0.30408610909570555, -1.0164886208436281, -2.0217637169707507, -1.0134225446121246]\n   1: 8278.426177247826\n   2: 8157.071791450592\n   3: 8151.672300242834\n   4: 8151.583568754749\n   5: 8151.583482990037\n   6: 8151.583482989767\nf_32: 8151.583482989767 [1.3403128971105505, 0.49649467428728034]\nvaryβ = true, obj₀ = 10395.480743443582, β = [0.20824538649009727, 0.05438464054172478, 0.3041148615287878, -1.0165600218528488, -2.021918394381872, -1.0135005493945886]\n   1: 8278.364600272647\n   2: 8157.064659600587\n   3: 8151.671928507907\n   4: 8151.583425349218\n   5: 8151.583340139287\n   6: 8151.583340139021\nf_33: 8151.583340139021 [1.339558330468156, 0.4968332751141721]\nvaryβ = true, obj₀ = 10395.442267529454, β = [0.20827353831174117, 0.05437907696035404, 0.30408876413380453, -1.016496426971929, -2.0218016612248904, -1.0134416550286387]\n   1: 8278.359702896048\n   2: 8157.064704875592\n   3: 8151.671931416343\n   4: 8151.5834264301775\n   5: 8151.583341215452\n   6: 8151.583341215184\nf_34: 8151.583341215184 [1.3395286260114363, 0.4969021419803052]\nvaryβ = true, obj₀ = 10395.479774747564, β = [0.20827484776302754, 0.05437892187902116, 0.3040880249694642, -1.016494747325167, -2.0218007362740926, -1.013441185462387]\n   1: 8278.368369188824\n   2: 8157.06558474131\n   3: 8151.671959910015\n   4: 8151.583426365366\n   5: 8151.583341082107\n   6: 8151.583341081839\nf_35: 8151.583341081839 [1.3396255162902735, 0.4968666077604276]\nvaryβ = true, obj₀ = 10395.478844624251, β = [0.20827126293066459, 0.05437964575018255, 0.30409141879336904, -1.0165030367584567, -2.021816263524065, -1.0134490187638063]\n   1: 8278.367429147173\n   2: 8157.065445657684\n   3: 8151.671955750738\n   4: 8151.583426429476\n   5: 8151.583341154114\n   6: 8151.583341153844\nf_36: 8151.583341153844 [1.339626756923135, 0.4968025697358324]\nvaryβ = true, obj₀ = 10395.453884488728, β = [0.20827098617875134, 0.05437958168696216, 0.30409113168519963, -1.016502197472787, -2.021812254819943, -1.0134469996597328]\n   1: 8278.36183706667\n   2: 8157.064895679179\n   3: 8151.671936855659\n   4: 8151.583425364515\n   5: 8151.583340132133\n   6: 8151.583340131869\nf_37: 8151.583340131869 [1.3395639000172377, 0.49683278387720115]\nvaryβ = true, obj₀ = 10395.451247339135, β = [0.20827333787757413, 0.05437912035977906, 0.3040889672864563, -1.016496926543131, -2.0218026564220364, -1.0134421570144092]\n   1: 8278.361538695954\n   2: 8157.0649121919505\n   3: 8151.67193745469\n   4: 8151.583425366178\n   5: 8151.583340132133\n   6: 8151.583340131867\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The optimization process is summarized by","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> mdl.LMM.optsum\nInitial parameter vector: [1.0, 1.0]\nInitial objective value:  8201.848559060621\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [0.0, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     37\nFinal parameter vector:   [1.3395639000172377, 0.49683278387720115]\nFinal objective value:    8151.583340131869\nReturn code:              FTOL_REACHED\n\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"As one would hope, given the name of the option, this fit is comparatively fast.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> @time(fit!(GeneralizedLinearMixedModel(vaform,\n    verbagg, Bernoulli()), fast=true))\n  0.306360 seconds (2.12 M allocations: 24.814 MiB)\nGeneralized Linear Mixed Model fit by maximum likelihood (nAGQ = 1)\n  r2 ~ 1 + anger + gender + btype + situ + (1 | subj) + (1 | item)\n  Distribution: Bernoulli{Float64}\n  Link: LogitLink()\n\n  Deviance: 8151.5833\n\nVariance components:\n        Column    Variance   Std.Dev.  \nsubj (Intercept)  1.63965872 1.28049159\nitem (Intercept)  0.22555221 0.47492337\n\n Number of obs: 7584; levels of grouping factors: 316, 24\n\nFixed-effects parameters:\n─────────────────────────────────────────────────────\n                Estimate  Std.Error  z value  P(>|z|)\n─────────────────────────────────────────────────────\n(Intercept)    0.208273   0.387547      0.54   0.5910\nanger          0.0543791  0.0160145     3.40   0.0007\ngender: M      0.304089   0.182791      1.66   0.0962\nbtype: scold  -1.0165     0.246175     -4.13   <1e-4 \nbtype: shout  -2.0218     0.247803     -8.16   <1e-15\nsitu: self    -1.01344    0.201588     -5.03   <1e-6 \n─────────────────────────────────────────────────────\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The alternative algorithm is to use PIRLS to find the conditional mode of the random effects, given beta and theta and then use the general nonlinear optimizer to fit with respect to both beta and theta. Because it is slower to incorporate the beta parameters in the general nonlinear optimization, the fast fit is performed first and used to determine starting estimates for the more general optimization.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> @time mdl1 = fit(MixedModel, vaform, verbagg, Bernoulli())\n  1.621018 seconds (10.26 M allocations: 95.842 MiB, 2.09% gc time)\nGeneralized Linear Mixed Model fit by maximum likelihood (nAGQ = 1)\n  r2 ~ 1 + anger + gender + btype + situ + (1 | subj) + (1 | item)\n  Distribution: Bernoulli{Float64}\n  Link: LogitLink()\n\n  Deviance: 8151.3998\n\nVariance components:\n        Column    Variance   Std.Dev.  \nsubj (Intercept)  1.64374179 1.28208494\nitem (Intercept)  0.22468305 0.47400743\n\n Number of obs: 7584; levels of grouping factors: 316, 24\n\nFixed-effects parameters:\n────────────────────────────────────────────────────\n               Estimate  Std.Error  z value  P(>|z|)\n────────────────────────────────────────────────────\n(Intercept)    0.196478  0.387752      0.51   0.6124\nanger          0.05752   0.0160365     3.59   0.0003\ngender: M      0.320955  0.183031      1.75   0.0795\nbtype: scold  -1.05815   0.245763     -4.31   <1e-4 \nbtype: shout  -2.10482   0.247412     -8.51   <1e-16\nsitu: self    -1.05521   0.201259     -5.24   <1e-6 \n────────────────────────────────────────────────────\n","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"This fit provided slightly better results (Laplace approximation to the deviance of 8151.400 versus 8151.583) but took 6 times as long. That is not terribly important when the times involved are a few seconds but can be important when the fit requires many hours or days of computing time.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"The comparison of the slow and fast fit is available in the optimization summary after the slow fit.","category":"page"},{"location":"optimization/#","page":"Details of the parameter estimation","title":"Details of the parameter estimation","text":"julia> mdl1.LMM.optsum\nInitial parameter vector: [0.20605302210322748, 0.039940376051149876, 0.23131667674984463, -0.7941857249205364, -1.539188208545692, -0.7766556048305915, 1.0, 1.0]\nInitial objective value:  8204.421187737946\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [-Inf, -Inf, -Inf, -Inf, -Inf, -Inf, 0.0, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10]\ninitial_step:             [0.20605302210322748, 0.039940376051149876, 0.23131667674984463, -0.7941857249205364, -1.539188208545692, -0.7766556048305915, 0.75, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     186\nFinal parameter vector:   [0.19647816858060044, 0.05751998568928086, 0.32095543494087175, -1.0581469196007018, -2.1048216065649847, -1.0552100825254875, 1.3397449401710144, 0.49532526439691343]\nFinal objective value:    8151.399761446788\nReturn code:              FTOL_REACHED\n\n","category":"page"},{"location":"bootstrap/#Parametric-bootstrap-for-linear-mixed-effects-models-1","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"","category":"section"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"Julia is well-suited to implementing bootstrapping and other simulation-based methods for statistical models. The parametricbootstrap function in the MixedModels package provides an efficient parametric bootstrap for linear mixed-effects models.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"parametricbootstrap","category":"page"},{"location":"bootstrap/#MixedModels.parametricbootstrap","page":"Parametric bootstrap for linear mixed-effects models","title":"MixedModels.parametricbootstrap","text":"parametricbootstrap(rng::AbstractRNG, nsamp::Integer, m::LinearMixedModel;\n    β = coef(m), σ = m.σ, θ = m.θ, use_threads=false)\nparametricbootstrap(nsamp::Integer, m::LinearMixedModel;\n    β = coef(m), σ = m.σ, θ = m.θ, use_threads=false)\n\nPerform nsamp parametric bootstrap replication fits of m, returning a MixedModelBootstrap.\n\nThe default random number generator is Random.GLOBAL_RNG.\n\nNamed Arguments\n\nβ, σ, and θ are the values of m's parameters for simulating the responses. use_threads determines whether or not to use thread-based parallelism.\n\n\n\n\n\n","category":"function"},{"location":"bootstrap/#The-parametric-bootstrap-1","page":"Parametric bootstrap for linear mixed-effects models","title":"The parametric bootstrap","text":"","category":"section"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"Bootstrapping is a family of procedures for generating sample values of a statistic, allowing for visualization of the distribution of the statistic or for inference from this sample of values.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"A parametric bootstrap is used with a parametric model, m, that has been fit to data. The procedure is to simulate n response vectors from m using the estimated parameter values and refit m to these responses in turn, accumulating the statistics of interest at each iteration.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"The parameters of a LinearMixedModel object are the fixed-effects parameters, β, the standard deviation, σ, of the per-observation noise, and the covariance parameter, θ, that defines the variance-covariance matrices of the random effects.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"For example, a simple linear mixed-effects model for the Dyestuff data in the lme4 package for R is fit by","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> using DataFrames, Gadfly, MixedModels, Random\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> dyestuff = MixedModels.dataset(:dyestuff)\n30×2 DataFrames.DataFrame\n│ Row │ batch  │ yield │\n│     │ String │ Int16 │\n├─────┼────────┼───────┤\n│ 1   │ A      │ 1545  │\n│ 2   │ A      │ 1440  │\n│ 3   │ A      │ 1440  │\n│ 4   │ A      │ 1520  │\n│ 5   │ A      │ 1580  │\n│ 6   │ B      │ 1540  │\n│ 7   │ B      │ 1555  │\n⋮\n│ 23  │ E      │ 1515  │\n│ 24  │ E      │ 1635  │\n│ 25  │ E      │ 1625  │\n│ 26  │ F      │ 1520  │\n│ 27  │ F      │ 1455  │\n│ 28  │ F      │ 1450  │\n│ 29  │ F      │ 1480  │\n│ 30  │ F      │ 1445  │\n\njulia> m1 = fit(MixedModel, @formula(yield ~ 1 + (1 | batch)), dyestuff)\nLinear mixed model fit by maximum likelihood\n yield ~ 1 + (1 | batch)\n   logLik   -2 logLik     AIC        BIC    \n -163.66353  327.32706  333.32706  337.53065\n\nVariance components:\n            Column    Variance  Std.Dev. \nbatch    (Intercept)  1388.3333 37.260345\nResidual              2451.2500 49.510100\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)    1527.5    17.6946    86.33   <1e-99\n──────────────────────────────────────────────────\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"To bootstrap the model parameters, first initialize a random number generator","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> const rng = MersenneTwister(1234321);\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"then create a bootstrap sample","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> samp = parametricbootstrap(rng, 10_000, m1);\n\njulia> propertynames(samp)\n7-element Array{Symbol,1}:\n :model    \n :objective\n :σ        \n :β        \n :θ        \n :σs       \n :σρs      \n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"As shown above, the sample has several named properties, which allow for convenient extraction of information.  For example, a density plot of the estimates of σ, the residual standard deviation, can be created as","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"plot(x=samp.σ, Geom.density, Guide.xlabel(\"Parametric bootstrap estimates of σ\"))","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"(Image: )","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"For the estimates of the intercept parameter, the getproperty extractor must be used","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"plot(x = first.(samp.β), Geom.density, Guide.xlabel(\"Parametric bootstrap estimates of β₁\"))","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"(Image: )","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"The σs property contains the estimates of the standard deviation of the random effects in a hierarchical format.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> typeof(samp.σs)\nNamedTuple{(:batch,),Tuple{Array{NamedTuple{(Symbol(\"(Intercept)\"),),Tuple{Float64}},1}}}\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"This is to allow for random effects associated with more than one grouping factor. If we only have one grouping factor for random effects, which is the case here, we can use the first extractor, as in","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> first(samp.σs)\n10000-element Array{NamedTuple{(Symbol(\"(Intercept)\"),),Tuple{Float64}},1}:\n ((Intercept) = 14.31202440021031,) \n ((Intercept) = 25.567322049075496,)\n ((Intercept) = 21.76223553106598,) \n ((Intercept) = 41.05589492574884,) \n ((Intercept) = 19.18021885057642,) \n ((Intercept) = 49.18319132233348,) \n ((Intercept) = 46.711965099114124,)\n ((Intercept) = 37.636680075523266,)\n ((Intercept) = 15.125683728901562,)\n ((Intercept) = 0.0,)               \n ⋮                                  \n ((Intercept) = 0.0,)               \n ((Intercept) = 35.47993724363591,) \n ((Intercept) = 85.6889420619044,)  \n ((Intercept) = 52.453848318538654,)\n ((Intercept) = 13.977380127035849,)\n ((Intercept) = 56.19821452821661,) \n ((Intercept) = 17.3300825173626,)  \n ((Intercept) = 23.634457239496463,)\n ((Intercept) = 23.999614688511368,)\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"or, to carry this one step further,","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"plot(x=first.(first(samp.σs)), Geom.density,\n    Guide.xlabel(\"Parametric bootstrap estimates of σ₁\"))","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"(Image: )","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"Notice that this density plot has a spike, or mode, at zero. Although this mode appears to be diffuse, this is an artifact of the way that density plots are created. In fact, it is a pulse, as can be seen from a histogram.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"plot(x=first.(first(samp.σs)), Geom.histogram,\n    Guide.xlabel(\"Parametric bootstrap estimates of σ₁\"))","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"(Image: )","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"A value of zero for the standard deviation of the random effects is an example of a singular covariance. It is easy to detect the singularity in the case of a scalar random-effects term. However, it is not as straightforward to detect singularity in vector-valued random-effects terms.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"For example, if we bootstrap a model fit to the sleepstudy data","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> sleepstudy = MixedModels.dataset(:sleepstudy)\n180×3 DataFrames.DataFrame\n│ Row │ subj   │ days │ reaction │\n│     │ String │ Int8 │ Float64  │\n├─────┼────────┼──────┼──────────┤\n│ 1   │ S308   │ 0    │ 249.56   │\n│ 2   │ S308   │ 1    │ 258.705  │\n│ 3   │ S308   │ 2    │ 250.801  │\n│ 4   │ S308   │ 3    │ 321.44   │\n│ 5   │ S308   │ 4    │ 356.852  │\n│ 6   │ S308   │ 5    │ 414.69   │\n│ 7   │ S308   │ 6    │ 382.204  │\n⋮\n│ 173 │ S372   │ 2    │ 297.597  │\n│ 174 │ S372   │ 3    │ 310.632  │\n│ 175 │ S372   │ 4    │ 287.173  │\n│ 176 │ S372   │ 5    │ 329.608  │\n│ 177 │ S372   │ 6    │ 334.482  │\n│ 178 │ S372   │ 7    │ 343.22   │\n│ 179 │ S372   │ 8    │ 369.142  │\n│ 180 │ S372   │ 9    │ 364.124  │\n\njulia> m2 = fit(\n    MixedModel,\n    @formula(reaction ~ 1+days+(1+days|subj)), \n    sleepstudy,\n)\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1763.93934 1783.09709\n\nVariance components:\n            Column    Variance  Std.Dev.   Corr.\nsubj     (Intercept)  565.51068 23.780469\n         days          32.68212  5.716828  0.08\nResidual              654.94145 25.591824\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n             Estimate  Std.Error  z value  P(>|z|)\n──────────────────────────────────────────────────\n(Intercept)  251.405     6.63226    37.91   <1e-99\ndays          10.4673    1.50224     6.97   <1e-11\n──────────────────────────────────────────────────\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> samp2 = parametricbootstrap(rng, 10_000, m2, use_threads=true);\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"the singularity can be exhibited as a standard deviation of zero or as a correlation of pm1. The σρs property of the sample is a vector of named tuples","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> σρ = first(samp2.σρs);\n\njulia> typeof(σρ)\nArray{NamedTuple{(:σ, :ρ),Tuple{NamedTuple{(Symbol(\"(Intercept)\"), :days),Tuple{Float64,Float64}},Tuple{Float64}}},1}\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"where the first element of the tuple is itself a tuple of standard deviations and the second (also the last) element of the tuple is the correlation.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"A histogram of the estimated correlations from the bootstrap sample has a spike at +1.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"ρs = first.(last.(σρ))\nplot(x = ρs, Geom.histogram,\n    Guide.xlabel(\"Parametric bootstrap samples of correlation of random effects\"))","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"(Image: )","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"or, as a count,","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> sum(ρs .≈ 1)\n328\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"Close examination of the histogram shows a few values of -1.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> sum(ρs .≈ -1)\n6\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"Furthermore there are even a few cases where the estimate of the standard deviation of the random effect for the intercept is zero.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> sum(first.(first.(first.(σρ))) .≈ 0)\n5\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"There is a general condition to check for singularity of an estimated covariance matrix or matrices in a bootstrap sample. The parameter optimized in the estimation is θ, the relative covariance parameter. Some of the elements of this parameter vector must be non-negative and, when one of these components is approximately zero, one of the covariance matrices will be singular.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"The boundary values are available as","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> samp2.m.optsum.lowerbd\n3-element Array{Float64,1}:\n    0.0\n -Inf  \n    0.0\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"so the check on singularity becomes","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> sum(θ -> any(θ .≈ samp2.m.optsum.lowerbd), samp2.θ)\n339\n","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"The issingular method for a LinearMixedModel object that tests if a parameter vector θ corresponds to a boundary or singular fit. The default value of θ is that from the model but another value can be given as the second argument.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"This operation is encapsulated in a method for the issingular function.","category":"page"},{"location":"bootstrap/#","page":"Parametric bootstrap for linear mixed-effects models","title":"Parametric bootstrap for linear mixed-effects models","text":"julia> sum(issingular(samp2))\n339\n","category":"page"},{"location":"GaussHermite/#Normalized-Gauss-Hermite-Quadrature-1","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"","category":"section"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"Gaussian Quadrature rules provide sets of x values, called abscissae, and weights, w, to approximate an integral with respect to a weight function, g(x). For a kth order rule the approximation is","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"int f(x)g(x)dx approx sum_i=1^k w_i f(x_i)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"For the Gauss-Hermite rule the weight function is","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"g(x) = e^-x^2","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"and the domain of integration is (-infty infty). A slight variation of this is the normalized Gauss-Hermite rule for which the weight function is the standard normal density","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"g(z) = phi(z) = frace^-z^22sqrt2pi","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"Thus, the expected value of f(z), where mathcalZsimmathscrN(01), is approximated as","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"mathbbEf=int_-infty^infty f(z) phi(z)dzapproxsum_i=1^k w_if(z_i) ","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"Naturally, there is a caveat. For the approximation to be accurate the function f(z) must behave like a low-order polynomial over the range of interest. More formally, a kth order rule is exact when f is a k-1 order polynomial.","category":"page"},{"location":"GaussHermite/#Evaluating-the-weights-and-abscissae-1","page":"Normalized Gauss-Hermite Quadrature","title":"Evaluating the weights and abscissae","text":"","category":"section"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"In the Golub-Welsch algorithm the abscissae for a particular Gaussian quadrature rule are determined as the eigenvalues of a symmetric tri-diagonal matrix and the weights are derived from the squares of the first row of the matrix of eigenvectors. For a kth order normalized Gauss-Hermite rule the tridiagonal matrix has zeros on the diagonal and the square roots of 1:k-1 on the super- and sub-diagonal, e.g.","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> using DataFrames, LinearAlgebra, Gadfly\n\njulia> sym3 = SymTridiagonal(zeros(3), sqrt.(1:2))\n3×3 LinearAlgebra.SymTridiagonal{Float64,Array{Float64,1}}:\n 0.0  1.0       ⋅     \n 1.0  0.0      1.41421\n  ⋅   1.41421  0.0    \n\njulia> ev = eigen(sym3);\n\njulia> show(ev.values)\n[-1.7320508075688739, 1.1102230246251565e-15, 1.7320508075688774]\njulia> show(abs2.(ev.vectors[1,:]))\n[0.16666666666666743, 0.6666666666666657, 0.16666666666666677]","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"As a function of k this can be written as","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"function gausshermitenorm(k)\n    ev = eigen(SymTridiagonal(zeros(k), sqrt.(1:k-1)))\n    ev.values, abs2.(ev.vectors[1,:])\nend","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"providing","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> gausshermitenorm(3)\n([-1.7320508075688739, 1.1102230246251565e-15, 1.7320508075688774], [0.16666666666666743, 0.6666666666666657, 0.16666666666666677])\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"The weights and positions are often shown as a lollipop plot. For the 9th order rule these are (Image: Lollipop plot of 9th order normalized Gauss-Hermite rule)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"Notice that the magnitudes of the weights drop quite dramatically away from zero, even on a logarithmic scale (Image: Lollipop plot of 9th order normalized Gauss-Hermite rule (logarithmic scale)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"The definition of MixedModels.GHnorm is similar to the gausshermitenorm function with some extra provisions for ensuring symmetry of the abscissae and the weights and for caching values once they have been calculated.","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"GHnorm","category":"page"},{"location":"GaussHermite/#MixedModels.GHnorm","page":"Normalized Gauss-Hermite Quadrature","title":"MixedModels.GHnorm","text":"GHnorm(k::Int)\n\nReturn the (unique) GaussHermiteNormalized{k} object.\n\nThe function values are stored (memoized) when first evaluated.  Subsequent evaluations for the same k have very low overhead.\n\n\n\n\n\n","category":"function"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> using MixedModels\n\njulia> GHnorm(3)\nMixedModels.GaussHermiteNormalized{3}([-1.7320508075688772, 0.0, 1.7320508075688772], [0.16666666666666666, 0.6666666666666666, 0.16666666666666666])\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"By the properties of the normal distribution, when mathcalXsimmathscrN(mu sigma^2)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"mathbbEg(x) approx sum_i=1^k g(mu + sigma z_i)w_i","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"For example, mathbbEmathcalX^2 where mathcalXsimmathcalN(2 3^2) is","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> μ = 2; σ = 3; ghn3 = GHnorm(3);\n\njulia> sum(@. ghn3.w * abs2(μ + σ * ghn3.z))  # should be μ² + σ² = 13\n13.0\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"(In general a dot, '.', after the function name in a function call, as in abs2.(...), or before an operator creates a fused vectorized evaluation in Julia. The macro @. has the effect of vectorizing all operations in the subsequent expression.)","category":"page"},{"location":"GaussHermite/#Application-to-a-model-for-contraception-use-1","page":"Normalized Gauss-Hermite Quadrature","title":"Application to a model for contraception use","text":"","category":"section"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"A binary response is a \"Yes\"/\"No\" type of answer. For example, in a 1989 fertility survey of women in Bangladesh (reported in Huq, N. M. and Cleland, J., 1990) one response of interest was whether the woman used artificial contraception. Several covariates were recorded including the woman's age (centered at the mean), the number of live children the woman has had (in 4 categories: 0, 1, 2, and 3 or more), whether she lived in an urban setting, and the district in which she lived. The version of the data used here is that used in review of multilevel modeling software conducted by the Center for Multilevel Modelling, currently at University of Bristol (http://www.bristol.ac.uk/cmm/learning/mmsoftware/data-rev.html). These data are available as the Contraception data frame in the test data for the MixedModels package.","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> contra = MixedModels.dataset(:contra)\n1934×6 DataFrames.DataFrame\n│ Row  │ dist   │ urban  │ urbdist │ livch  │ age     │ use    │\n│      │ String │ String │ String  │ String │ Float32 │ String │\n├──────┼────────┼────────┼─────────┼────────┼─────────┼────────┤\n│ 1    │ D01    │ Y      │ U01     │ 3+     │ 18.44   │ N      │\n│ 2    │ D01    │ Y      │ U01     │ 0      │ -5.56   │ N      │\n│ 3    │ D01    │ Y      │ U01     │ 2      │ 1.44    │ N      │\n│ 4    │ D01    │ Y      │ U01     │ 3+     │ 8.44    │ N      │\n│ 5    │ D01    │ Y      │ U01     │ 0      │ -13.56  │ N      │\n│ 6    │ D01    │ Y      │ U01     │ 0      │ -11.56  │ N      │\n│ 7    │ D01    │ Y      │ U01     │ 3+     │ 18.44   │ N      │\n⋮\n│ 1927 │ D61    │ N      │ R61     │ 3+     │ 19.44   │ N      │\n│ 1928 │ D61    │ N      │ R61     │ 2      │ -9.56   │ Y      │\n│ 1929 │ D61    │ N      │ R61     │ 2      │ -2.56   │ N      │\n│ 1930 │ D61    │ N      │ R61     │ 3+     │ 14.44   │ N      │\n│ 1931 │ D61    │ N      │ R61     │ 2      │ -4.56   │ N      │\n│ 1932 │ D61    │ N      │ R61     │ 3+     │ 14.44   │ N      │\n│ 1933 │ D61    │ N      │ R61     │ 0      │ -13.56  │ N      │\n│ 1934 │ D61    │ N      │ R61     │ 3+     │ 10.44   │ N      │\n\njulia> describe(contra)\n6×8 DataFrames.DataFrame. Omitted printing of 1 columns\n│ Row │ variable │ mean       │ min    │ median │ max   │ nunique │ nmissing │\n│     │ Symbol   │ Union…     │ Any    │ Union… │ Any   │ Union…  │ Nothing  │\n├─────┼──────────┼────────────┼────────┼────────┼───────┼─────────┼──────────┤\n│ 1   │ dist     │            │ D01    │        │ D61   │ 60      │          │\n│ 2   │ urban    │            │ N      │        │ Y     │ 2       │          │\n│ 3   │ urbdist  │            │ R01    │        │ U61   │ 102     │          │\n│ 4   │ livch    │            │ 0      │        │ 3+    │ 4       │          │\n│ 5   │ age      │ 0.00204741 │ -13.56 │ -1.56  │ 19.44 │         │          │\n│ 6   │ use      │            │ N      │        │ Y     │ 2       │          │\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"A smoothed scatterplot of contraception use versus age (Image: Scatterplot smooth of contraception use versus age)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"shows that the proportion of women using artificial contraception is approximately quadratic in age.","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"A model with fixed-effects for age, age squared, number of live children and urban location and with random effects for district, is fit as","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> const form1 = @formula use ~ 1 + age + abs2(age) + livch + urban + (1|dist);\n\njulia> m1 = fit!(GeneralizedLinearMixedModel(form1, contra,\n    Bernoulli()), fast=true)\nGeneralized Linear Mixed Model fit by maximum likelihood (nAGQ = 1)\n  use ~ 1 + age + :(abs2(age)) + livch + urban + (1 | dist)\n  Distribution: Bernoulli{Float64}\n  Link: LogitLink()\n\n  Deviance: 2372.7843\n\nVariance components:\n        Column    Variance   Std.Dev. \ndist (Intercept)  0.21774805 0.4666348\n\n Number of obs: 1934; levels of grouping factors: 60\n\nFixed-effects parameters:\n───────────────────────────────────────────────────────\n                Estimate    Std.Error  z value  P(>|z|)\n───────────────────────────────────────────────────────\n(Intercept)  -1.01528     0.17102        -5.94   <1e-8 \nage           0.00351074  0.00905384      0.39   0.6982\nabs2(age)    -0.0044865   0.000710531    -6.31   <1e-9 \nlivch: 1      0.801876    0.15912         5.04   <1e-6 \nlivch: 2      0.901014    0.181636        4.96   <1e-6 \nlivch: 3+     0.899415    0.182254        4.93   <1e-6 \nurban: Y      0.684404    0.117653        5.82   <1e-8 \n───────────────────────────────────────────────────────\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"For a model such as m1, which has a single, scalar random-effects term, the unscaled conditional density of the spherical random effects variable, mathcalU, given the observed data, mathcalY=mathbfy_0, can be expressed as a product of scalar density functions, f_i(u_i) i=1dotsq. In the PIRLS algorithm, which determines the conditional mode vector, tildemathbfu, the optimization is performed on the deviance scale,","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"D(mathbfu)=-2sum_i=1^q log(f_i(u_i))","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"The objective, D, consists of two parts: the sum of the (squared) deviance residuals, measuring fidelity to the data, and the squared length of mathbfu, which is the penalty. In the PIRLS algorithm, only the sum of these components is needed. To use Gauss-Hermite quadrature the contributions of each of the u_ii=1dotsq should be separately evaluated.","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> const devc0 = map!(abs2, m1.devc0, m1.u[1]);  # start with uᵢ²\n\njulia> const devresid = m1.resp.devresid;   # n-dimensional vector of deviance residuals\n\njulia> const refs = first(m1.LMM.reterms).refs;  # n-dimensional vector of indices in 1:q\n\njulia> for (dr, i) in zip(devresid, refs)\n    devc0[i] += dr\nend\n\njulia> show(devc0)\n[121.2924801450227, 22.022573435337044, 2.9189004633380637, 30.78771782846595, 47.54204940382077, 69.55502476239353, 23.40468714983591, 46.2790740696941, 24.452780942903217, 7.759490680232708, 9.773662493089443, 42.75903562389615, 27.552494317141548, 156.42045125005123, 26.192468269516443, 27.416249308715372, 24.538089101308174, 57.56615433514777, 31.179403724165553, 22.341558790629122, 27.478094946616007, 19.98845653780336, 16.01085482367089, 9.761479126094898, 83.8634939902057, 15.568769342418342, 42.75968291134423, 51.46851364451562, 32.7333445146523, 70.41572428137225, 39.68586984125795, 27.544104072327254, 14.697567299589792, 53.047354057283655, 64.8496472277211, 19.7438806636221, 19.41551626629434, 11.242285417111953, 37.416775010276034, 54.26508084327625, 39.5824951436427, 17.39840479690159, 60.22781257668201, 28.819186047189294, 42.44425502416158, 112.99129226317999, 17.297702032807678, 51.57734308178808, 2.187213814887027, 22.96155930136727, 47.41447569249752, 87.23162357262305, 25.923443852119213, 9.470291343611592, 61.17586290904251, 27.102818391091848, 48.01617442658484, 8.460202668133022, 30.365222161200894, 47.374159841901275]","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"One thing to notice is that, even on the deviance scale, the contributions of different districts can be of different magnitudes. This is primarily due to different sample sizes in the different districts.","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> using FreqTables\n\njulia> freqtable(contra, :dist)'\n1×60 Named LinearAlgebra.Adjoint{Int64,Array{Int64,1}}\n' ╲ dist │ D01  D02  D03  D04  D05  D06  …  D56  D57  D58  D59  D60  D61\n─────────┼──────────────────────────────────────────────────────────────\n1        │ 117   20    2   30   39   65  …   45   27   33   10   32   42\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"Because the first district has one of the largest sample sizes and the third district has the smallest sample size, these two will be used for illustration. For a range of u values, evaluate the individual components of the deviance and store them in a matrix.","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"const devc = m1.devc;\nconst xvals = -5.0:2.0^(-4):5.0;\nconst uv = vec(m1.u[1]);\nconst u₀ = vec(m1.u₀[1]);\nresults = zeros(length(devc0), length(xvals))\nfor (j, u) in enumerate(xvals)\n    fill!(devc, abs2(u))\n    fill!(uv, u)\n    MixedModels.updateη!(m1)\n    for (dr, i) in zip(devresid, refs)\n        devc[i] += dr\n    end\n    copyto!(view(results, :, j), devc)\nend","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"A plot of the deviance contribution versus u_1 (Image: Deviance contribution of u₁)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"shows that the deviance contribution is very close to a quadratic. This is also true for u_3 (Image: Deviance contribution of u₃)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"The PIRLS algorithm provides the locations of the minima of these scalar functions, stored as","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> m1.u₀[1]\n1×60 Array{Float64,2}:\n -1.58477  -0.0727267  0.449058  0.341589  …  -0.767069  -0.902922  -1.06625\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"the minima themselves, evaluated as devc0 above, and a horizontal scale, which is the inverse of diagonal of the Cholesky factor. As shown below, this is an estimate of the conditional standard deviations of the components of mathcalU.","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> const s = inv.(m1.LMM.L[Block(1,1)].diag);\n\njulia> s'\n1×60 LinearAlgebra.Adjoint{Float64,Array{Float64,1}}:\n 0.406888  0.713511  0.952164  0.627134  …  0.839678  0.654964  0.603258\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"The curves can be put on a common scale, corresponding to the standard normal, as","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> for (j, z) in enumerate(xvals)\n    @. uv = u₀ + z * s\n    MixedModels.updateη!(m1)\n    @. devc = abs2(uv) - devc0\n    for (dr, i) in zip(devresid, refs)\n        devc[i] += dr\n    end\n    copyto!(view(results, :, j), devc)\nend\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"(Image: Scaled and shifted deviance contributions)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"(Image: Scaled and shifted deviance contributions)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"On the original density scale these become","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> for (j, z) in enumerate(xvals)\n    @. uv = u₀ + z * s\n    MixedModels.updateη!(m1)\n    @. devc = abs2(uv) - devc0\n    for (dr, i) in zip(devresid, refs)\n        devc[i] += dr\n    end\n    copyto!(view(results, :, j), @. exp(-devc/2))\nend\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"(Image: Scaled and shifted conditional density)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"(Image: Scaled and shifted conditional density)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"and the function to be integrated with the normalized Gauss-Hermite rule is","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"julia> for (j, z) in enumerate(xvals)\n    @. uv = u₀ + z * s\n    MixedModels.updateη!(m1)\n    @. devc = abs2(uv) - devc0\n    for (dr, i) in zip(devresid, refs)\n        devc[i] += dr\n    end\n    copyto!(view(results, :, j), @. exp((abs2(z) - devc)/2))\nend\n","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"(Image: Function to be integrated with normalized Gauss-Hermite rule)","category":"page"},{"location":"GaussHermite/#","page":"Normalized Gauss-Hermite Quadrature","title":"Normalized Gauss-Hermite Quadrature","text":"(Image: Function to be integrated with normalized Gauss-Hermite rule)","category":"page"},{"location":"#MixedModels.jl-Documentation-1","page":"MixedModels.jl Documentation","title":"MixedModels.jl Documentation","text":"","category":"section"},{"location":"#","page":"MixedModels.jl Documentation","title":"MixedModels.jl Documentation","text":"CurrentModule = MixedModels","category":"page"},{"location":"#","page":"MixedModels.jl Documentation","title":"MixedModels.jl Documentation","text":"MixedModels.jl is a Julia package providing capabilities for fitting and examining linear and generalized linear mixed-effect models. It is similar in scope to the lme4 package for R.","category":"page"},{"location":"#","page":"MixedModels.jl Documentation","title":"MixedModels.jl Documentation","text":"Pages = [\n        \"constructors.md\",\n        \"optimization.md\",\n        \"GaussHermite.md\",\n        \"bootstrap.md\",\n]\nDepth = 2","category":"page"}]
}
